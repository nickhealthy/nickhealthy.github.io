{"componentChunkName":"component---src-templates-blog-post-js","path":"/infra/Jenkins_들어가기/","result":{"data":{"site":{"siteMetadata":{"title":"Woo's Dev Log","author":"nickhealthy","siteUrl":"https://nickhealthy.github.io","comment":{"disqusShortName":"","utterances":"nickhealthy/nickhealthy.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"b197d68d-4f41-5187-828f-b66bc50102df","excerpt":"Jenkins란 ? 젠킨스는 소프트웨어 개발 시 지속적 통합(Continuous Integrations, CI)와 지속적 배포(Continuous Delivery, CD)를 위한 대표적인 도구입니다. 다수의 개발자들이 하나의 프로그램을 개발할 때 버전 충돌을 방지하기 위해 각자 작업한 내용을 공유영역에 있는 저장소에 빈번히 업로드함으로써 지속적 통합이 가능하도록 해줍니다. 젠킨스와 같은 CI…","html":"<h1 id=\"jenkins란-\" style=\"position:relative;\"><a href=\"#jenkins%EB%9E%80-\" aria-label=\"jenkins란  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Jenkins란 ?</h1>\n<p>젠킨스는 소프트웨어 개발 시 지속적 통합(Continuous Integrations, CI)와 지속적 배포(Continuous Delivery, CD)를 위한 대표적인 도구입니다.<br>\n다수의 개발자들이 하나의 프로그램을 개발할 때 <strong>버전 충돌을 방지하기 위해</strong> 각자 작업한 내용을 공유영역에 있는 저장소에 빈번히 업로드함으로써 지속적 통합이 가능하도록 해줍니다. 젠킨스와 같은 CI툴이 등장하기 전에는 일정시간마다 빌드를 실행하는 방식이 일반적이었습니다. 특히 개발자들의 작성한 소스들의 커밋이 모두 끝난 심야 시간대에 이러한 빌드가 타이머에 의해 집중적으로 진행되었는데, 이를 <code class=\"language-text\">nightly-build</code>라 합니다.<br>\n하지만, <strong>젠킨스는 정기적인 빌드에서 한발 나아가 서브버전, Git과 같은 버전관리시스템과 연동하여 소스의 커밋을 감지하면 자동적으로 자동화 테스트가 포함된 빌드가 작동되도록 설정할 수 있습니다.</strong></p>\n<h2 id=\"젠킨스가-주는-이점\" style=\"position:relative;\"><a href=\"#%EC%A0%A0%ED%82%A8%EC%8A%A4%EA%B0%80-%EC%A3%BC%EB%8A%94-%EC%9D%B4%EC%A0%90\" aria-label=\"젠킨스가 주는 이점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>젠킨스가 주는 이점</h2>\n<ul>\n<li>빌드, 테스트, 배포 프로세스를 자동화하여 소프트웨어 품질 향상과 개발 생산성 향상에 도움을 줍니다.</li>\n<li>개발중인 프로젝트에서 커밋은 매우 빈번하게 일어나기 때문에 커밋 횟수만큼 빌드 하는 것이 아닌 <strong>작업이 큐잉되어 자신이 실행될 차례를 기다리게 됩니다.</strong></li>\n<li>프로젝트 표준 컴파일 환경에서의 컴파일 오류 검출</li>\n<li>자동화 테스트 수행</li>\n<li>정적 코드 분석에 의한 코딩 규약 준수여부 체크</li>\n<li>프로파일링 툴을 이용한 소스 변경에 따른 성능 변화 감시</li>\n<li>결합 테스트 환경에 대한 배포작업</li>\n</ul>\n<br />\n<a href='#'><small class='up-button'>위로 올라가기💨</small></a>\n<br />","frontmatter":{"title":"Jenkins 들어가기","date":"February 09, 2021","category":"🧱 infra"}}},"pageContext":{"slug":"/infra/Jenkins_들어가기/","previous":{"fields":{"slug":"/algorithm/[파이썬알고리즘인터뷰]5.리스트, 딕셔너리 자료형/"},"frontmatter":{"title":"[파이썬알고리즘인터뷰]#5 리스트, 딕셔너리 자료형","category":"🔥 algorithm","draft":false}},"next":{"fields":{"slug":"/infra/Jenkins_실습환경 구축/"},"frontmatter":{"title":"Jenkins 실습환경 구축","category":"🧱 infra","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}