{"componentChunkName":"component---src-templates-blog-post-js","path":"/docker/Docker network/","result":{"data":{"site":{"siteMetadata":{"title":"Woo's Dev Log","author":"nickhealthy","siteUrl":"https://nickhealthy.github.io","comment":{"disqusShortName":"","utterances":"nickhealthy/nickhealthy.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"c4d299ba-39a1-56c7-b406-9fe8550d7f3e","excerpt":"도커를 공부할 겸 이전에 했던 프로젝트를 도커로 배포하고 싶어서 docker network를 공부하게 되었다. 프로젝트를 진행할 때 검색 엔진을 위해  를 이용했는데 나머지 컨테이너들은 서로 연결이 되었지만  컨테이너는 연결이 안됬었다… 트러블 슈팅도 할겸 이참에 docker network도 배우기위해 시작한다! 네트워크 조회 현재 생성되어 있는 Docker network 목록 조회 , ,  은 Docker…","html":"<p>도커를 공부할 겸 이전에 했던 프로젝트를 도커로 배포하고 싶어서 docker network를 공부하게 되었다.</p>\n<p>프로젝트를 진행할 때 검색 엔진을 위해 <code class=\"language-text\">elasticsearch</code> 를 이용했는데 나머지 컨테이너들은 서로 연결이 되었지만 <code class=\"language-text\">elasticsearch</code> 컨테이너는 연결이 안됬었다…</p>\n<p>트러블 슈팅도 할겸 이참에 docker network도 배우기위해 시작한다!</p>\n<h2 id=\"네트워크-조회\" style=\"position:relative;\"><a href=\"#%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EC%A1%B0%ED%9A%8C\" aria-label=\"네트워크 조회 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>네트워크 조회</h2>\n<p>현재 생성되어 있는 Docker network 목록 조회</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker network <span class=\"token function\">ls</span></code></pre></div>\n<p><code class=\"language-text\">bridge</code>, <code class=\"language-text\">host</code>, <code class=\"language-text\">none</code> 은 Docker 데몬이 실행되면서 기본적으로 생성되는 네트워크이다.</p>\n<p>대부분의 경우에는 디폴트 네트워크를 사용하는 것 보다는 사용자가 직접 네트워크를 생성해서 사용하는 것이 권장된다.</p>\n<h2 id=\"네트워크-종류\" style=\"position:relative;\"><a href=\"#%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EC%A2%85%EB%A5%98\" aria-label=\"네트워크 종류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>네트워크 종류</h2>\n<p>Docker 네트워크는 <code class=\"language-text\">bridge</code>, <code class=\"language-text\">host</code>, <code class=\"language-text\">overlay</code> 등 목적에 따라 다양한 종류의 네트워크 드라이버(driver)를 지원한다.</p>\n<ul>\n<li><code class=\"language-text\">bridge</code> 네트워크는 하나의 호스트 컴퓨터 내에서 여러 컨테이너들이 서로 소통할 수 있도록 해준다.</li>\n<li><code class=\"language-text\">host</code> 네트워크는 컨터이너를 호스트 컴퓨터와 동일한 네트워크에서 컨테이너를 돌리기 위해서 사용된다.</li>\n<li><code class=\"language-text\">overlay</code> 네트워크는 여러 호스트에 분산되어 돌아가는 컨테이너들 간에 네트워킹을 위해서 사용된다.</li>\n</ul>\n<h2 id=\"네트워크-상세-정보\" style=\"position:relative;\"><a href=\"#%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EC%83%81%EC%84%B8-%EC%A0%95%EB%B3%B4\" aria-label=\"네트워크 상세 정보 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>네트워크 상세 정보</h2>\n<p><code class=\"language-text\">docker network ls</code> 명령을 통해서 조회 된 네트워크 상세정보를 확인해볼 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker network inspect <span class=\"token string\">'네트워크이름 or ID'</span></code></pre></div>\n<ul>\n<li>이 명령어를 사용하면 다양한 정보들이 포함되어 있지만 <strong>어떤 컨테이너들이 연결되어 있는지도 확인</strong>이 가능하다.</li>\n<li>\n<p>또는 해당 컨테이너에 대한 상세정보와 네트워크도 아래의 명령어를 통해 확인이 가능하다.</p>\n<ul>\n<li><code class=\"language-text\">$ docker inspect &#39;컨테이너이름 or ID&#39;</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"네트워크-생성\" style=\"position:relative;\"><a href=\"#%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EC%83%9D%EC%84%B1\" aria-label=\"네트워크 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>네트워크 생성</h2>\n<p><code class=\"language-text\">docker network create &#39;네트워크이름&#39;</code> 명령어를 이용하면 된다.</p>\n<p>추가된 네트워크는 <code class=\"language-text\">docker network ls</code> 커맨드로 확인할 수 있다. 또한 <code class=\"language-text\">-d</code> 옵션을 사용하지 않았기 때문에 기본값인 <code class=\"language-text\">bridge</code> 네트워크로 생성된다.</p>\n<h2 id=\"네트워크에-컨테이너-연결\" style=\"position:relative;\"><a href=\"#%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC%EC%97%90-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-%EC%97%B0%EA%B2%B0\" aria-label=\"네트워크에 컨테이너 연결 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>네트워크에 컨테이너 연결</h2>\n<p>컨테이너를 실행할 때 <code class=\"language-text\">--network</code> 옵션을 명시해주지 않으면, <strong>기본적으로 <code class=\"language-text\">bride</code>라는 이름의 디폴트 네트워크에 붙게 된다.</strong></p>\n<p>해당 컨테이너를 생성한 Docker 네트워크에 연결하기 위해서는 <code class=\"language-text\">docker network connect</code> 커맨드를 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker network connect <span class=\"token string\">'생성한네트워크이름'</span> <span class=\"token string\">'컨테이너이름 or ID'</span></code></pre></div>\n<h2 id=\"네트워크로부터-컨테이너-연결-해제\" style=\"position:relative;\"><a href=\"#%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC%EB%A1%9C%EB%B6%80%ED%84%B0-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-%EC%97%B0%EA%B2%B0-%ED%95%B4%EC%A0%9C\" aria-label=\"네트워크로부터 컨테이너 연결 해제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>네트워크로부터 컨테이너 연결 해제</h2>\n<p>하나의 컨테이너는 여러 개의 네트워크에 동시에 연결할 수 있다.</p>\n<p>Docker 네트워크로부터 컨테이너의 연결을 끊을 때는 <code class=\"language-text\">docker network disconnect</code> 커맨드를 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker network disconnect <span class=\"token string\">'연결을 끊을 네트워크이름'</span> <span class=\"token string\">'컨테이너이름 or ID'</span></code></pre></div>\n<h2 id=\"컨테이너-간-네트워킹\" style=\"position:relative;\"><a href=\"#%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-%EA%B0%84-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%82%B9\" aria-label=\"컨테이너 간 네트워킹 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컨테이너 간 네트워킹</h2>\n<blockquote>\n<p>해당 테스트를 하기 위해서는 하나의 네트워크 안에 두 개 이상의 컨테이너가 존재해야 함.</p>\n</blockquote>\n<p><code class=\"language-text\">one</code>, <code class=\"language-text\">two</code> 컨테이너가 존재한다고 가정하고 <code class=\"language-text\">ping</code> 명령어를 실행</p>\n<ul>\n<li>컨테이너 이름을 호스트네임(hostname)처럼 사용이 가능하다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker <span class=\"token builtin class-name\">exec</span> one <span class=\"token function\">ping</span> two</code></pre></div>\n<p>해당 명령어는 <code class=\"language-text\">one</code> 컨테이너가 <code class=\"language-text\">two</code> 컨테이너를 상대로 <code class=\"language-text\">ping</code>를 날리는 것이다.</p>\n<p>반대로 <code class=\"language-text\">two</code> 컨테이너가 <code class=\"language-text\">one</code> 컨테이너를 상대로 <code class=\"language-text\">ping</code> 명령어를 날릴건데 컨테이너 이름 대신에 IP를 사용 또한 가능하다.</p>\n<blockquote>\n<p>ip 확인은 해당 컨테이너의 <code class=\"language-text\">inspect</code>명령어를 통해서 확인이 가능</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker <span class=\"token builtin class-name\">exec</span> two <span class=\"token function\">ping</span> <span class=\"token number\">172.19</span>.x.x</code></pre></div>\n<h2 id=\"네트워크-제거\" style=\"position:relative;\"><a href=\"#%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EC%A0%9C%EA%B1%B0\" aria-label=\"네트워크 제거 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>네트워크 제거</h2>\n<p><code class=\"language-text\">docker network rm &#39;네트워크이름&#39;</code> 명령어를 이용하면 된다.</p>\n<p><strong>네트워크 상에서 실행 중인 컨테이너가 있을 때는 제거가 되지 않는다.</strong> 해당 네트워크에 연결되어 실행 중인 모든 컨테이너를 먼저 중지 시키고, 네트워크를 삭제해야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker stop <span class=\"token string\">'컨테이너 이름'</span></code></pre></div>\n<h2 id=\"네트워크-청소\" style=\"position:relative;\"><a href=\"#%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EC%B2%AD%EC%86%8C\" aria-label=\"네트워크 청소 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>네트워크 청소</h2>\n<p>하나의 호스트 컴퓨터에서 다수의 컨테이너를 돌리다 보면 불필요한 리소스가 낭비될 수 있다. 아무 컨테이너도 연결되어 있지 않은 네트워크를 제거 할 때는 <code class=\"language-text\">docker network prune</code> 커맨드를 이용해서 불필요한 네트워크를 한번에 모두 제거할 수 있다.</p>\n<h4 id=\"tip\" style=\"position:relative;\"><a href=\"#tip\" aria-label=\"tip permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TIP</h4>\n<p>그 이외에도 모든 불필요한 리소스를 한번에 정리하고 싶다면 <code class=\"language-text\">docker system prune -a</code> 명령어를 이용하면 한번에 처리된다.</p>","frontmatter":{"title":"도커 네트워크","date":"January 31, 2021","category":"🐳 docker"}}},"pageContext":{"slug":"/docker/Docker network/","previous":{"fields":{"slug":"/Kubernetes/Virtual Machine를 이용한 쿠버네티스 실습 환경 구축/"},"frontmatter":{"title":"Virtual Machine를 이용한 쿠버네티스 실습 환경 구축","category":"🧭 Kubernetes","draft":false}},"next":{"fields":{"slug":"/docker/장고프로젝트 docker로 배포하기 with elasticsearch/"},"frontmatter":{"title":"장고프로젝트 docker로 배포하기 with elasticsearch","category":"🐳 docker","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}