{"componentChunkName":"component---src-templates-blog-post-js","path":"/docker/[따배도] - 컨테이너 볼륨 스토리지/","result":{"data":{"site":{"siteMetadata":{"title":"Woo's Dev Log","author":"nickhealthy","siteUrl":"https://nickhealthy.github.io","comment":{"disqusShortName":"","utterances":"nickhealthy/nickhealthy.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"9bca94ef-3cbf-5d1a-9655-067101aac017","excerpt":"컨테이너 볼륨 명령어와 볼륨 공유를 통해 컨테이너에서 사용하는 방법을 배워봅시다. 컨테이너 볼륨이란? 실행중인 컨테이너에 있는 데이터는 컨테이너가 종료되는 즉시 데이터가 삭제되므로, 중요 데이터는 별도로 보관할 필요성이 있습니다. 컨테이너 이미지는 기본적으로 ReadOnly로 수정이 불가합니다. 컨테이너에 추가되는 데이터들은 별도의 RW 레이어에 저장됩니다. 컨테이너를 실행시킬 때(프로세스로 동작중) RW 레이어가 실행되고, 모든 데이터는 RW 레이어에 저장됩니다. 이것을 Union File…","html":"<p>컨테이너 볼륨 명령어와 볼륨 공유를 통해 컨테이너에서 사용하는 방법을 배워봅시다.</p>\n<h2 id=\"컨테이너-볼륨이란\" style=\"position:relative;\"><a href=\"#%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-%EB%B3%BC%EB%A5%A8%EC%9D%B4%EB%9E%80\" aria-label=\"컨테이너 볼륨이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컨테이너 볼륨이란?</h2>\n<ul>\n<li>실행중인 컨테이너에 있는 데이터는 컨테이너가 종료되는 즉시 데이터가 삭제되므로, <strong><u>중요 데이터는 별도로 보관할 필요성이 있습니다.</u></strong></li>\n<li>컨테이너 이미지는 기본적으로 <strong><u>ReadOnly</u></strong>로 수정이 불가합니다.</li>\n<li>\n<p><u>컨테이너에 추가되는 데이터들은 별도의 RW 레이어에 저장</u>됩니다.</p>\n<ul>\n<li>컨테이너를 실행시킬 때(프로세스로 동작중) RW 레이어가 실행되고, 모든 데이터는 RW 레이어에 저장됩니다.</li>\n<li>이것을 <strong>Union File System 또는 Overlay</strong>라고 불립니다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"데이터를-영구적으로-보존하는-방법\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%EC%98%81%EA%B5%AC%EC%A0%81%EC%9C%BC%EB%A1%9C-%EB%B3%B4%EC%A1%B4%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"데이터를 영구적으로 보존하는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터를 영구적으로 보존하는 방법</h2>\n<ul>\n<li>\n<p><code class=\"language-text\">-v</code> 옵션을 통해서 볼륨을 <code class=\"language-text\">&lt;호스트 path&gt;:&lt;컨테이너 path&gt;</code> 형태로 만들 수 있습니다.</p>\n<ul>\n<li>컨테이너 안에 쌓인 데이터를 호스트 path로 지정해서 데이터를 쌓을 수 있습니다.</li>\n</ul>\n</li>\n<li>MySQL 이미지를 이용한 명령어 예시</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker run -d --name db -v /dbdata:/var/lib/mysql -e <span class=\"token assign-left variable\">MYSQL_ALLOW_EMPTY_PASSWORD</span><span class=\"token operator\">=</span>pass mysql:latest</code></pre></div>\n<h3 id=\"이외에-다른-명령-옵션\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EC%99%B8%EC%97%90-%EB%8B%A4%EB%A5%B8-%EB%AA%85%EB%A0%B9-%EC%98%B5%EC%85%98\" aria-label=\"이외에 다른 명령 옵션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이외에 다른 명령 옵션</h3>\n<ul>\n<li>\n<p><code class=\"language-text\">-v &lt;호스트 path&gt;:&lt;컨테이너 path&gt;:&lt;read write mode&gt;</code> : <em>ReadOnly</em> 등의 옵션을 지정할 수 있습니다.</p>\n<ul>\n<li><code class=\"language-text\">ro</code> 옵션을 부여하게 되면, 컨테이너 안에서 데이터 수정 불가능</li>\n</ul>\n</li>\n<li><code class=\"language-text\">-v &lt;컨테이너 path&gt;</code> : 자동으로 <em>/var/lib/docker/volumes/uuid/\\</em>data_ 폴더에 데이터가 보존됩니다.</li>\n</ul>\n<h2 id=\"컨테이너끼리-데이터-공유하기\" style=\"position:relative;\"><a href=\"#%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88%EB%81%BC%EB%A6%AC-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B3%B5%EC%9C%A0%ED%95%98%EA%B8%B0\" aria-label=\"컨테이너끼리 데이터 공유하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컨테이너끼리 데이터 공유하기</h2>\n<ul>\n<li>컨테이너를 운용하면서 쌓인 데이터를 해당 컨테이너에서만 사용하는 것이 아니라, 다른 컨테이너에서 데이터의 사용이 필요할 때 사용할 수 있습니다.</li>\n</ul>\n<h3 id=\"예시\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%8B%9C\" aria-label=\"예시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예시</h3>\n<ul>\n<li>아래 예시는 df라는 이름을 가진 컨테이너가 /webdata 디렉토리에 데이터를 저장시켜 주고,</li>\n<li>우분투 이미지를 사용하는 컨테이너가 해당 디렉토리의 데이터를 가져와 readonly로 사용중인 것을 의미합니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># df라는 이름의 컨테이너 생성 후 /webdata에 데이터를 볼륨 마운트</span>\n$ docker run -v /webdata:/webdata -d --name <span class=\"token function\">df</span> swjoolinux/df:latest\n<span class=\"token comment\"># 우분투 이미지를 사용하는 컨테이너에서 /webdata에 쌓인 데이터를 ro(readonly)로 사용</span>\n$ docker run -d -v /webdata:/usr/share/nginx/html:ro ubuntu:latest</code></pre></div>\n<h2 id=\"실습\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%8A%B5\" aria-label=\"실습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실습</h2>\n<h3 id=\"mysql-컨테이너-이미지를-통한-data-영구-보존하기\" style=\"position:relative;\"><a href=\"#mysql-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-%EC%9D%B4%EB%AF%B8%EC%A7%80%EB%A5%BC-%ED%86%B5%ED%95%9C-data-%EC%98%81%EA%B5%AC-%EB%B3%B4%EC%A1%B4%ED%95%98%EA%B8%B0\" aria-label=\"mysql 컨테이너 이미지를 통한 data 영구 보존하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MySQL 컨테이너 이미지를 통한 data 영구 보존하기</h3>\n<ul>\n<li>\n<p>도커 이미지를 실행 및 <em>/dbdata</em>에 저장하기</p>\n<ul>\n<li><em>/dbdata</em> 디렉토리가 별도로 생성되어 있지 않아도 해당 디렉토리가 없다면 자동 생성됩니다.</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker run -d --name db -v /dbdata:/var/lib/mysql -e <span class=\"token assign-left variable\">MYSQL_ROOT_PASSWORD</span><span class=\"token operator\">=</span>pass mysql:latest</code></pre></div>\n<ul>\n<li>컨테이너 안에 접속하기</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker <span class=\"token builtin class-name\">exec</span> -it db /bin/bash</code></pre></div>\n<ul>\n<li>컨테이너 안에 있는 MySQL 접속</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ mysql -u root -ppass\n<span class=\"token comment\"># mysql</span>\n<span class=\"token comment\"># 데이터베이스 확인</span>\nshow databases<span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># swjoo - database 만들기</span>\ncreate database swjoo<span class=\"token punctuation\">;</span>\n<span class=\"token builtin class-name\">exit</span> <span class=\"token comment\"># mysql out</span>\n<span class=\"token builtin class-name\">exit</span> <span class=\"token comment\"># 컨테이너 out</span></code></pre></div>\n<ul>\n<li>호스트 PC 안에 볼륨 확인</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">cd</span> /dbdata/\n$ <span class=\"token function\">ls</span>\n<span class=\"token comment\"># swjoo 폴더가 생성되어 있음을 확인</span></code></pre></div>\n<ul>\n<li>컨테이너 삭제해도 데이터베이스가 남아있는지 확인하기</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker <span class=\"token function\">rm</span> -f db\n$ <span class=\"token builtin class-name\">cd</span> /dbdata</code></pre></div>\n<h4 id=\"별첨---호스트-path-생략\" style=\"position:relative;\"><a href=\"#%EB%B3%84%EC%B2%A8---%ED%98%B8%EC%8A%A4%ED%8A%B8-path-%EC%83%9D%EB%9E%B5\" aria-label=\"별첨   호스트 path 생략 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>별첨 - 호스트 path 생략</h4>\n<ul>\n<li>호스트 path 생략 시 <code class=\"language-text\">/var/lib/docker/volumes/UUID(고유이름-inspect로 확인가능)/_data</code> 폴더에 데이터가 생성됩니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker run -d --name db -v /var/lib/mysql -e <span class=\"token assign-left variable\">MYSQL_ROOT_PASSWORD</span><span class=\"token operator\">=</span>pass mysql:latest</code></pre></div>\n<h4 id=\"볼륨과-관련된-커맨드\" style=\"position:relative;\"><a href=\"#%EB%B3%BC%EB%A5%A8%EA%B3%BC-%EA%B4%80%EB%A0%A8%EB%90%9C-%EC%BB%A4%EB%A7%A8%EB%93%9C\" aria-label=\"볼륨과 관련된 커맨드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>볼륨과 관련된 커맨드</h4>\n<ul>\n<li>도커 볼륨을 사용하고 있는 목록 확인하기</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker volume <span class=\"token function\">ls</span></code></pre></div>\n<ul>\n<li>도커 볼륨 삭제하기</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker volume <span class=\"token function\">rm</span> 볼륨 아이디</code></pre></div>\n<h3 id=\"실습2---웹데이터를-컨테이너에-지원하기\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%8A%B52---%EC%9B%B9%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88%EC%97%90-%EC%A7%80%EC%9B%90%ED%95%98%EA%B8%B0\" aria-label=\"실습2   웹데이터를 컨테이너에 지원하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실습2 - 웹데이터를 컨테이너에 지원하기</h3>\n<ul>\n<li>데이터 디렉토리 생성 및 데이터 입력</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">mkdir</span> /webdata <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">cd</span> /webdata\n$ <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"&lt;h1>youtube swjoo&lt;/h1>\"</span> <span class=\"token operator\">></span> index.html</code></pre></div>\n<ul>\n<li>\n<p>볼륨을 이용한 nginx 컨테이너 실행 및 <code class=\"language-text\">curl</code> 명령어로 검증</p>\n<ul>\n<li><em>/usr/share/nginx/html:ro</em> : nginx의 루트 디렉토리 경로(ro는 ReadOnly 옵션)</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker run -d --name web -v /webdata:/usr/share/nginx/html:ro -p <span class=\"token number\">80</span>:80 nginx:latest\n$ <span class=\"token function\">curl</span> localhost:80</code></pre></div>\n<div class=\"quote-block\">\n<div class=\"quote-block__emoji\">💡</div>\n<div class=\"quote-block__content\" markdown=1>\n<p>df 명령어</p>\n<ul>\n<li>디스크 사용량을 모니터링 할 때 사용</li>\n<li>root 파일시스템 사용량 확인 명령어</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">df</span> -h /</code></pre></div>\n</div>\n</div>\n<h3 id=\"실습3---컨테이너끼리-데이터-공유하기\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%8A%B53---%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88%EB%81%BC%EB%A6%AC-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B3%B5%EC%9C%A0%ED%95%98%EA%B8%B0\" aria-label=\"실습3   컨테이너끼리 데이터 공유하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실습3 - 컨테이너끼리 데이터 공유하기</h3>\n<ul>\n<li>\n<p>쉘 스크립트 생성</p>\n<ul>\n<li>컨테이너에 사용할 데이터 생성</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">cat</span> df.sh\n<span class=\"token comment\">#!/bin/bash</span>\n<span class=\"token function\">mkdir</span> -p /webdata\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">true</span>\n<span class=\"token keyword\">do</span>\n  <span class=\"token function\">df</span> -h / <span class=\"token operator\">></span> /webdata/index.html <span class=\"token comment\"># root의 파일시스템 모니터링 데이터를 생성 후, 리다이렉트</span>\n  <span class=\"token function\">sleep</span> <span class=\"token number\">10</span>\n<span class=\"token keyword\">done</span></code></pre></div>\n<ul>\n<li><em>df.sh</em> 스크립트를 통해 데이터를 만들어내는 이미지를 생성하기 위한 dockerfile 파일 생성</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"dockerfile\"><pre class=\"language-dockerfile\"><code class=\"language-dockerfile\">$ cat dockerfile\n<span class=\"token keyword\">FROM</span> ubuntu<span class=\"token punctuation\">:</span>18.04\n<span class=\"token keyword\">ADD</span> df.sh /bin/df.sh\n<span class=\"token keyword\">RUN</span> chmod +x /bin/df.sh\n<span class=\"token keyword\">ENTRYPOINT</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"/bin/df.sh\"</span><span class=\"token punctuation\">]</span></code></pre></div>\n<ul>\n<li>dockerfile 이미지 빌드</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker build -t alskadmlcraz/df:latest <span class=\"token builtin class-name\">.</span></code></pre></div>\n<ul>\n<li><em>/webdata</em> 폴더에 데이터를 쌓는 컨테이너 실행</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker run -v /webdata:/webdata -d alskadmlcraz/df:latest</code></pre></div>\n<ul>\n<li><em>/webdata</em>의 데이터를 이용하는 nginx 컨테이너 실행 및 검증</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker run -d --name web -v /webdata:/usr/share/nginx/html:ro -p <span class=\"token number\">80</span>:80 nginx:latest\n$ <span class=\"token function\">curl</span> localhost:80\n<span class=\"token comment\"># 아래 다수의 데이터가 쌓여 있는 것을 확인할 수 있음</span>\nFilesystem      Size  Used Avail Use% Mounted on\noverlay          17G  <span class=\"token number\">4</span>.9G   11G  <span class=\"token number\">31</span>% /\nFilesystem      Size  Used Avail Use% Mounted on\noverlay          17G  <span class=\"token number\">4</span>.9G   11G  <span class=\"token number\">31</span>% /\nFilesystem      Size  Used Avail Use% Mounted on\noverlay          17G  <span class=\"token number\">4</span>.9G   11G  <span class=\"token number\">31</span>% /\nFilesystem      Size  Used Avail Use% Mounted on\noverlay          17G  <span class=\"token number\">4</span>.9G   11G  <span class=\"token number\">31</span>% /\nFilesystem      Size  Used Avail Use% Mounted on\noverlay          17G  <span class=\"token number\">4</span>.9G   11G  <span class=\"token number\">31</span>% /\nFilesystem      Size  Used Avail Use% Mounted on\noverlay          17G  <span class=\"token number\">4</span>.9G   11G  <span class=\"token number\">31</span>% /\nFilesystem      Size  Used Avail Use% Mounted on\noverlay          17G  <span class=\"token number\">4</span>.9G   11G  <span class=\"token number\">31</span>% /\nFilesystem      Size  Used Avail Use% Mounted on\noverlay          17G  <span class=\"token number\">4</span>.9G   11G  <span class=\"token number\">31</span>% /\n<span class=\"token punctuation\">..</span>.</code></pre></div>\n<ul>\n<li>모든 자원 삭제</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker system prune</code></pre></div>","frontmatter":{"title":"[따배도] - 컨테이너 볼륨 스토리지","date":"August 03, 2021","category":"🐳 docker"}}},"pageContext":{"slug":"/docker/[따배도] - 컨테이너 볼륨 스토리지/","previous":{"fields":{"slug":"/docker/[따배도] - 컨테이너 리소스 관리하기/"},"frontmatter":{"title":"[따배도] - 컨테이너 리소스 관리하기","category":"🐳 docker","draft":false}},"next":{"fields":{"slug":"/docker/[따배도] - 컨테이너 네트워크/"},"frontmatter":{"title":"[따배도] - 컨테이너 네트워크","category":"🐳 docker","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}