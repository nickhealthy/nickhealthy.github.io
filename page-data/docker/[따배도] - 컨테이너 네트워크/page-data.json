{"componentChunkName":"component---src-templates-blog-post-js","path":"/docker/[따배도] - 컨테이너 네트워크/","result":{"data":{"site":{"siteMetadata":{"title":"Woo's Dev Log","author":"nickhealthy","siteUrl":"https://nickhealthy.github.io","comment":{"disqusShortName":"","utterances":"nickhealthy/nickhealthy.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"b43b3f4e-5eda-5195-9741-03b82229be39","excerpt":"도커 네트워크 구성과 개념 그리고 명령어에 대해 알아봅시다. 컨테이너 통신 방법 docker0 virtual ethernet bridge: 외부 네트워크와 도커 컨테이너의 연결 다리 역할을 합니다. 기본 네트워크 대역:  / docker0는 를 통해서 게이트웨이 역할을 해줌 NAT(Network Address Translate), 포트포워딩 지원 - iptables를 통해서 지원해 줌 L2 통신기반 Container 생성 시 veth 인터페이스 생성(sandbox…","html":"<p>도커 네트워크 구성과 개념 그리고 명령어에 대해 알아봅시다.</p>\n<h2 id=\"컨테이너-통신-방법\" style=\"position:relative;\"><a href=\"#%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-%ED%86%B5%EC%8B%A0-%EB%B0%A9%EB%B2%95\" aria-label=\"컨테이너 통신 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컨테이너 통신 방법</h2>\n<h3 id=\"docker0\" style=\"position:relative;\"><a href=\"#docker0\" aria-label=\"docker0 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>docker0</h3>\n<ul>\n<li>\n<p>virtual ethernet bridge: 외부 네트워크와 도커 컨테이너의 연결 다리 역할을 합니다.</p>\n<ul>\n<li>기본 네트워크 대역: <code class=\"language-text\">172.17.0.0/16</code> / docker0는 <code class=\"language-text\">172.17.0.1</code>를 통해서 게이트웨이 역할을 해줌</li>\n<li>NAT(Network Address Translate), 포트포워딩 지원 - iptables를 통해서 지원해 줌</li>\n<li>L2 통신기반</li>\n<li>Container 생성 시 veth 인터페이스 생성(sandbox)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"도커-네트워크-구성도\" style=\"position:relative;\"><a href=\"#%EB%8F%84%EC%BB%A4-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EA%B5%AC%EC%84%B1%EB%8F%84\" aria-label=\"도커 네트워크 구성도 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>도커 네트워크 구성도</h3>\n<img width=\"530\" alt=\"1  도커 네트워크구성\" src=\"https://user-images.githubusercontent.com/66216102/128034291-d34e961a-08f0-488f-a753-9a46d189650c.png\">\n<ul>\n<li>\n<p><code class=\"language-text\">ip addr</code> 명령어를 통해 네트워크 카드 확인</p>\n<ul>\n<li>eth0 - 호스트 이더넷, docker0 네트워크 확인 가능</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/128034293-0a854722-7cc7-4f2e-8360-d8d51bf87c86.JPG\" alt=\"2  아이피 확인\"></p>\n<h2 id=\"컨테이너-포트를-외부에-노출하는-방법\" style=\"position:relative;\"><a href=\"#%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-%ED%8F%AC%ED%8A%B8%EB%A5%BC-%EC%99%B8%EB%B6%80%EC%97%90-%EB%85%B8%EC%B6%9C%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"컨테이너 포트를 외부에 노출하는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컨테이너 포트를 외부에 노출하는 방법</h2>\n<ul>\n<li>container port를 외부로 노출시켜 외부 연결을 허용해줄 수 있습니다.</li>\n<li>\n<p>iptalbes rule을 통한 포트 노출 - 포트포워딩</p>\n<ul>\n<li><code class=\"language-text\">-p hostPort:containerPort</code></li>\n<li><code class=\"language-text\">-p containerPort</code> : 이 경우 호스트 포트는 <strong>random</strong></li>\n<li><code class=\"language-text\">-P</code> : EXPOSE로 맞춰진 random 한 값을 도커 네트워크 대역에서 설정</li>\n</ul>\n</li>\n<li>포트포워딩 예시 및 <code class=\"language-text\">iptables</code> 명령어를 통해 확인</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker run --name web -d -p <span class=\"token number\">80</span>:80 nginx:latest\n$ iptables -t nat -L -nv</code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/128034295-4d897963-021a-48b8-99c7-df36cd6b0807.JPG\" alt=\"3  iptables 명령어를 통해 확인\"></p>\n<h2 id=\"컨테이너-네트워크-추가하는-방법\" style=\"position:relative;\"><a href=\"#%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EC%B6%94%EA%B0%80%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"컨테이너 네트워크 추가하는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컨테이너 네트워크 추가하는 방법</h2>\n<h3 id=\"user-defined-bridge-network-생성\" style=\"position:relative;\"><a href=\"#user-defined-bridge-network-%EC%83%9D%EC%84%B1\" aria-label=\"user defined bridge network 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>user-defined bridge network 생성</h3>\n<ul>\n<li>\n<p>네트워크 대역을 사용자 정의 네트워크로 만들어서 연결이 가능합니다.</p>\n<ul>\n<li><code class=\"language-text\">docker network create</code> 명령어를 사용해서 만들 수 있습니다.</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># --driver-brige : 네트워크 통신 방식 설정</span>\n<span class=\"token comment\"># --subnet : 서브넷 설정</span>\n<span class=\"token comment\"># --gateway : 게이트웨이 설정</span>\n<span class=\"token comment\"># mynet : 사용자 정의 네트워크 이름</span>\n$ docker network create --driver-brige --subnet <span class=\"token number\">192.168</span>.100.0/24 --gateway <span class=\"token number\">192.168</span>.100.254 mynet</code></pre></div>\n<ul>\n<li>만들어진 네트워크를 사용하는 방법</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># --net : 사용할 네트워크 지정</span>\n<span class=\"token comment\"># --ip : 고정 ip주소 사용</span>\n$ docker run -d --name appjs --net mynet --ip <span class=\"token number\">192.168</span>.100.100 -p <span class=\"token number\">8080</span>:8080 swjoo/appjs`</code></pre></div>\n<h2 id=\"컨테이너끼리-통신하는-방법\" style=\"position:relative;\"><a href=\"#%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88%EB%81%BC%EB%A6%AC-%ED%86%B5%EC%8B%A0%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"컨테이너끼리 통신하는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컨테이너끼리 통신하는 방법</h2>\n<p>컨테이너간 통신이 필요할 때가 있는데 예를 들어서 프론트 단과 백엔드 단이 구성되어 있는 멀티 티어 같은 구조입니다. 프론트에서 만들어진 데이터를 백엔드에 저장하고 또는 데이터를 가져와서 사용해할 때 사용하게 됩니다. 이때 각각의 컨테이너가 독립적으로 운용된다고 하였을 때 컨테이너 간의 통신이 필요하므로 컨테이너 간의 통신이 필요하게 됩니다.</p>\n<blockquote>\n<p>기본적으로 컨테이너는 서로 독립적인 격리 상태 구조입니다.</p>\n</blockquote>\n<h3 id=\"예시를-통해-알아봅시다\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%8B%9C%EB%A5%BC-%ED%86%B5%ED%95%B4-%EC%95%8C%EC%95%84%EB%B4%85%EC%8B%9C%EB%8B%A4\" aria-label=\"예시를 통해 알아봅시다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예시를 통해 알아봅시다.</h3>\n<ul>\n<li>워드프레스는 기본적으로 아파치 웹서버를 내장하고 있고 워드프레스를 이용하여 웹을 제작하려고 할 때, 데이터베이스가(백엔드 단)이 필요하게 됩니다.</li>\n<li>\n<p>데이터베이스 생성</p>\n<ul>\n<li><code class=\"language-text\">MYSQL_ROOT_PASSWORD</code>: mysql의 root 사용자 비밀번호</li>\n<li><code class=\"language-text\">MYSQL_PASSWORD</code> : 워드프레스가 사용하는 패스워드</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker run -d --name mysql -v /dbdata:/var/lib/mysql -e <span class=\"token assign-left variable\">MYSQL_ROOT_PASSWORD</span><span class=\"token operator\">=</span>wordpress -e <span class=\"token assign-left variable\">MYSQL_PASSWORD</span><span class=\"token operator\">=</span>wordpress mysql:latest</code></pre></div>\n<ul>\n<li>\n<p>워드프레스 생성</p>\n<ul>\n<li><code class=\"language-text\">--link</code> : 명령어를 통해 mysql 컨테이너와 연결</li>\n<li><code class=\"language-text\">mysql:mysql</code> : &#x3C;연결할 컨테이너 명>:&#x3C;이름 사용자 지정></li>\n<li><code class=\"language-text\">-e WORDPRESS_DB_PASSWORD</code> : 워드프레스 db에 사용하는 패스워드(mysql 컨테이너에서 설정한 것)</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker run -d --name wordpress --link mysql:mysql -e WORDPRESS_DB_PASSWORD -p <span class=\"token number\">80</span>:80 wordpress:latest</code></pre></div>\n<p>해당 설정을 통해 호스트 <code class=\"language-text\">/dbdata path</code>에 데이터가 쌓이게 되고 프론트, 백엔드 단 설정이 완료됩니다.</p>\n<h2 id=\"실습\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%8A%B5\" aria-label=\"실습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실습</h2>\n<h2 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h2>\n<p><a href=\"https://joont92.github.io/docker/network-%EA%B5%AC%EC%A1%B0/\">도커 네트워크 구성</a><br>\n<a href=\"https://linuxstory1.tistory.com/entry/iptables-%EA%B8%B0%EB%B3%B8-%EB%AA%85%EB%A0%B9%EC%96%B4-%EB%B0%8F-%EC%98%B5%EC%85%98-%EB%AA%85%EB%A0%B9%EC%96%B4\">iptables 명령어</a><br>\n<a href=\"https://docs.docker.com/engine/reference/commandline/run/\">도커 공식 레퍼런스</a></p>","frontmatter":{"title":"[따배도] - 컨테이너 네트워크","date":"August 03, 2021","category":"🐳 docker"}}},"pageContext":{"slug":"/docker/[따배도] - 컨테이너 네트워크/","previous":{"fields":{"slug":"/docker/[따배도] - 컨테이너 볼륨 스토리지/"},"frontmatter":{"title":"[따배도] - 컨테이너 볼륨 스토리지","category":"🐳 docker","draft":false}},"next":null}},"staticQueryHashes":["3128451518","521680639"]}