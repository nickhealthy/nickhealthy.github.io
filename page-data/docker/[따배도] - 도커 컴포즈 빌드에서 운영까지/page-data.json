{"componentChunkName":"component---src-templates-blog-post-js","path":"/docker/[따배도] - 도커 컴포즈 빌드에서 운영까지/","result":{"data":{"site":{"siteMetadata":{"title":"Woo's Dev Log","author":"nickhealthy","siteUrl":"https://nickhealthy.github.io","comment":{"disqusShortName":"","utterances":"nickhealthy/nickhealthy.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"98946c2a-2b83-56ab-a20f-a564b185ee0e","excerpt":"도커 컴포즈를 사용해보고 익혀봅시다! 도커 컴포즈가 무엇인가 여러 컨테이너를 일괄적으로 정의하고 실행할 수 있는 툴 하나의 서비스를 운영하기 위해서는 여러 개의 애플리케이션이 동작해야 함 컨테이너화 된 애플리케이션들을 통합 관리할 수 있음 YAML 파일 형식의 정의를 통해 도커 파일들을 정의하고 사용 또는 도커 컴포즈의  명령어를 통해  명령어처럼 바로 실행도 가능 컴포즈 YAML 파일 명령어 정리  : compose…","html":"<p>도커 컴포즈를 사용해보고 익혀봅시다!</p>\n<h2 id=\"도커-컴포즈가-무엇인가\" style=\"position:relative;\"><a href=\"#%EB%8F%84%EC%BB%A4-%EC%BB%B4%ED%8F%AC%EC%A6%88%EA%B0%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80\" aria-label=\"도커 컴포즈가 무엇인가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>도커 컴포즈가 무엇인가</h2>\n<ul>\n<li>\n<p><strong><u>여러 컨테이너를 일괄적으로 정의하고 실행할 수 있는 툴</u></strong></p>\n<ul>\n<li>하나의 서비스를 운영하기 위해서는 여러 개의 애플리케이션이 동작해야 함</li>\n<li>컨테이너화 된 애플리케이션들을 통합 관리할 수 있음</li>\n<li>YAML 파일 형식의 정의를 통해 도커 파일들을 정의하고 사용</li>\n<li>또는 도커 컴포즈의 <code class=\"language-text\">image</code> 명령어를 통해 <code class=\"language-text\">docker run</code> 명령어처럼 바로 실행도 가능</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"컴포즈-yaml-파일-명령어-정리\" style=\"position:relative;\"><a href=\"#%EC%BB%B4%ED%8F%AC%EC%A6%88-yaml-%ED%8C%8C%EC%9D%BC-%EB%AA%85%EB%A0%B9%EC%96%B4-%EC%A0%95%EB%A6%AC\" aria-label=\"컴포즈 yaml 파일 명령어 정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컴포즈 YAML 파일 명령어 정리</h3>\n<ul>\n<li>\n<p><code class=\"language-text\">version</code> : compose 버전.</p>\n<ul>\n<li>버전에 따라 지원 문법이 다름</li>\n</ul>\n</li>\n<li><code class=\"language-text\">services</code> : 컴포즈를 이용해서 실행할 컨테이너 옵션을 정의</li>\n<li><code class=\"language-text\">build</code> : 빌드할 도커 파일의 위치</li>\n<li>\n<p><code class=\"language-text\">image</code> : compose를 통해 실행할 이미지를 지정</p>\n<ul>\n<li>도커 파일 정의 없이 <code class=\"language-text\">run</code> 명령어를 통해 image를 허브에서 바로 pull해서 돌리는 역할과 비슷</li>\n</ul>\n</li>\n<li><code class=\"language-text\">command</code> : 컨테이너에서 실행될 명령어 지정</li>\n<li><code class=\"language-text\">port</code> : 컨테이너가 공개하는 포트를 나열</li>\n<li><code class=\"language-text\">link</code> : 다른 컨테이너와 연계할 때 연계할 컨테이너를 지정</li>\n<li><code class=\"language-text\">expose</code> : 포트를 링크로 연계된 컨테이너에게만 공개할 포트</li>\n<li><code class=\"language-text\">volumes</code> : 컨테이너에 볼륨을 마운드</li>\n<li><code class=\"language-text\">environment</code> : 컨테이너에 적용할 환경변수를 정의</li>\n<li>\n<p><code class=\"language-text\">restart</code> : 컨테이너가 종료될 때 적용할 restart 정책</p>\n<ul>\n<li><code class=\"language-text\">no</code> : default 값 - 재시작 되지 않음</li>\n<li><code class=\"language-text\">always</code> : 컨테이너를 수동으로 끄기 전까지 항상 재시작</li>\n<li><code class=\"language-text\">on-failure</code> : 오류가 있을 시에 재시작</li>\n</ul>\n</li>\n<li><code class=\"language-text\">depends_on</code> : <strong><u>컨테이너 간의 종속성을 정의, 정의한 컨테이너가 먼저 동작</u></strong></li>\n</ul>\n<h2 id=\"도커-컴포즈-설치\" style=\"position:relative;\"><a href=\"#%EB%8F%84%EC%BB%A4-%EC%BB%B4%ED%8F%AC%EC%A6%88-%EC%84%A4%EC%B9%98\" aria-label=\"도커 컴포즈 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>도커 컴포즈 설치</h2>\n<ul>\n<li>공식 래퍼런스 확인</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">curl</span> -L <span class=\"token string\">\"https://github.com/docker/compose/releases/download/1.29.2/docker-compose-<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">uname</span> -s<span class=\"token variable\">)</span></span>-<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">uname</span> -m<span class=\"token variable\">)</span></span>\"</span> -o /usr/local/bin/docker-compose\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">chmod</span> +x /usr/local/bin/docker-compose\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">ln</span> -s /usr/local/bin/docker-compose /usr/bin/docker-compose\n$ docker-compose --version</code></pre></div>\n<h2 id=\"도커-컴포즈-실습-1\" style=\"position:relative;\"><a href=\"#%EB%8F%84%EC%BB%A4-%EC%BB%B4%ED%8F%AC%EC%A6%88-%EC%8B%A4%EC%8A%B5-1\" aria-label=\"도커 컴포즈 실습 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>도커 컴포즈 실습 1</h2>\n<p>Flask, Redis 컨테이너를 도커 컴포즈를 통해 실행시켜 봅시다.</p>\n<div class=\"quote-block\">\n<div class=\"quote-block__emoji\">💡</div>\n<div class=\"quote-block__content\" markdown=1>\n<p>실습 전 알아두기!</p>\n<p>도커 컴포즈는 yml파일 위치가 있는 곳에서 실행을 해주어야 합니다.<br>\n따라서 디렉토리 생성 후, 도커 파일 정의, 컴포즈 파일 정의 및 실행을 하는 순서를 추천합니다.</p>\n</div>\n</div>\n<ul>\n<li>프로젝트 디렉토리 생성</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">mkdir</span> composetest\n$ <span class=\"token builtin class-name\">cd</span> composetest</code></pre></div>\n<ul>\n<li>파이썬 [app.py] 파일 생성 - Flask 이용</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">cat <span class=\"token operator\">></span> app<span class=\"token punctuation\">.</span>py\n\n<span class=\"token keyword\">import</span> time\n\n<span class=\"token keyword\">import</span> redis\n<span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> Flask\n\napp <span class=\"token operator\">=</span> Flask<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span>\ncache <span class=\"token operator\">=</span> redis<span class=\"token punctuation\">.</span>Redis<span class=\"token punctuation\">(</span>host<span class=\"token operator\">=</span><span class=\"token string\">'redis'</span><span class=\"token punctuation\">,</span> port<span class=\"token operator\">=</span><span class=\"token number\">6379</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_hit_count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    retries <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> cache<span class=\"token punctuation\">.</span>incr<span class=\"token punctuation\">(</span><span class=\"token string\">'hits'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">except</span> redis<span class=\"token punctuation\">.</span>exceptions<span class=\"token punctuation\">.</span>ConnectionError <span class=\"token keyword\">as</span> exc<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> retries <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">raise</span> exc\n            retries <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n            time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    count <span class=\"token operator\">=</span> get_hit_count<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Hello World! I have been seen {} times.\\n'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>파이썬 라이브러리 관리 [requirements.txt] 파일 생성</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">cat <span class=\"token operator\">></span> requirements<span class=\"token punctuation\">.</span>txt\nflask\nredis</code></pre></div>\n<ul>\n<li>도커 파일 생성</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"dockerfile\"><pre class=\"language-dockerfile\"><code class=\"language-dockerfile\"><span class=\"token keyword\">FROM</span> python<span class=\"token punctuation\">:</span>3.7<span class=\"token punctuation\">-</span>alpine\n<span class=\"token keyword\">WORKDIR</span> /code\n<span class=\"token keyword\">ENV</span> FLASK_APP=app.py\n<span class=\"token keyword\">ENV</span> FLASK_RUN_HOST=0.0.0.0\n<span class=\"token keyword\">RUN</span> apk add <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>no<span class=\"token punctuation\">-</span>cache gcc musl<span class=\"token punctuation\">-</span>dev linux<span class=\"token punctuation\">-</span>headers\n<span class=\"token keyword\">COPY</span> requirements.txt requirements.txt\n<span class=\"token keyword\">RUN</span> pip install <span class=\"token punctuation\">-</span>r requirements.txt\n<span class=\"token keyword\">EXPOSE</span> 5000\n<span class=\"token keyword\">COPY</span> . .\n<span class=\"token keyword\">CMD</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"flask\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"run\"</span><span class=\"token punctuation\">]</span></code></pre></div>\n<ul>\n<li>도커 컴포즈 [docker-compose.yml] 파일 생성</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'3.9'</span>\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">web</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span> .\n    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">'5000:5000'</span>\n  <span class=\"token key atrule\">redis</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'redis:alpine'</span></code></pre></div>\n<ul>\n<li>도커 컴포즈 yaml 파일 문법 체크</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker-compose config</code></pre></div>\n<ul>\n<li>도커 컴포즈 실행</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker-compose up</code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/130312075-82a37b2f-8d2a-4235-b676-648112f4f785.JPG\" alt=\"1  docker-compose up 확인\"></p>\n<p>Flask, Redis 컨테이너를 통해 잘 실행된 모습입니다.</p>\n<ul>\n<li>도커 컴포즈 yaml 파일에 볼륨 마운트 추가</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">version: <span class=\"token string\">\"3.9\"</span>\nservices:\n  web:\n    build: <span class=\"token builtin class-name\">.</span>\n    ports:\n      - <span class=\"token string\">\"5000:5000\"</span>\n    <span class=\"token comment\"># ------추가--------</span>\n    volumes:\n      - .:/code\n    environment:\n      FLASK_ENV: development\n    <span class=\"token comment\"># -----------------</span>\n  redis:\n    image: <span class=\"token string\">\"redis:alpine\"</span></code></pre></div>\n<ul>\n<li>이번에는 도커 컴포즈를 백그라운드로 실행</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker-compose up -d</code></pre></div>\n<ul>\n<li>[app.py] 파일을 수정 시, 볼륨 마운트를 통해서 바로 컨테이너에 반영되는 모습을 확인</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">$ vi app<span class=\"token punctuation\">.</span>py\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">return</span> Hello Docker!\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/130312076-ebed45f5-ca43-4270-9332-f861515b7e93.JPG\" alt=\"2  volume 사용\"></p>\n<ul>\n<li><code class=\"language-text\">scale</code> 명령어를 통해 redis 컨테이너 늘리기</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker-compose scale <span class=\"token assign-left variable\">redis</span><span class=\"token operator\">=</span><span class=\"token number\">3</span></code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/130312077-a1156cd0-43a3-4a92-af14-28dbaf36b6ca.JPG\" alt=\"3  redis 스케일아웃\"></p>\n<ul>\n<li>\n<p><code class=\"language-text\">run</code> 명령어를 통해 <code class=\"language-text\">docker exec</code> 명령어처럼 명령 결과를 받아오기</p>\n<ul>\n<li>web 컨테이너에 env 명령어를 날린 것과 동일</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/130312078-773a180b-8af6-4b96-af9c-39b2b0d3aa8d.JPG\" alt=\"4  docker-compose run\"></p>\n<h2 id=\"도커-컴포즈-실습-2\" style=\"position:relative;\"><a href=\"#%EB%8F%84%EC%BB%A4-%EC%BB%B4%ED%8F%AC%EC%A6%88-%EC%8B%A4%EC%8A%B5-2\" aria-label=\"도커 컴포즈 실습 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>도커 컴포즈 실습 2</h2>\n<p>wordpress와 mysql 컨테이너를 도커 컴포즈를 통해 실행시켜 봅시다.</p>\n<blockquote>\n<p>wordpress의 동작 방식과 구성 내용은 도커 network 포스팅 or 공식 래퍼런스 참고</p>\n</blockquote>\n<ul>\n<li>프로젝트 디렉토리 생성</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">mkdir</span> wordpress\n$ <span class=\"token builtin class-name\">cd</span> wordpress</code></pre></div>\n<ul>\n<li>\n<p>도커 컴포즈 [docker-compose.yml] 파일 생성</p>\n<ul>\n<li>depends_on : db 컨테이너 이름을 가진 서비스가 실행된 후, wordpress 컨테이너 실행</li>\n<li>volumes : mysql 데이터와 wordpress_data 볼륨 마운트</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'3.9'</span>\n\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">db</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> mysql<span class=\"token punctuation\">:</span><span class=\"token number\">5.7</span>\n    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> db_data<span class=\"token punctuation\">:</span>/var/lib/mysql\n    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">MYSQL_ROOT_PASSWORD</span><span class=\"token punctuation\">:</span> somewordpress\n      <span class=\"token key atrule\">MYSQL_DATABASE</span><span class=\"token punctuation\">:</span> wordpress\n      <span class=\"token key atrule\">MYSQL_USER</span><span class=\"token punctuation\">:</span> wordpress\n      <span class=\"token key atrule\">MYSQL_PASSWORD</span><span class=\"token punctuation\">:</span> wordpress\n\n  <span class=\"token key atrule\">wordpress</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">depends_on</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> db\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> wordpress<span class=\"token punctuation\">:</span>latest\n    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> wordpress_data<span class=\"token punctuation\">:</span>/var/www/html\n    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">'8080:80'</span>\n    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">WORDPRESS_DB_HOST</span><span class=\"token punctuation\">:</span> db<span class=\"token punctuation\">:</span><span class=\"token number\">3306</span>\n      <span class=\"token key atrule\">WORDPRESS_DB_USER</span><span class=\"token punctuation\">:</span> wordpress\n      <span class=\"token key atrule\">WORDPRESS_DB_PASSWORD</span><span class=\"token punctuation\">:</span> wordpress\n      <span class=\"token key atrule\">WORDPRESS_DB_NAME</span><span class=\"token punctuation\">:</span> wordpress\n<span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">db_data</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token key atrule\">wordpress_data</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>도커 컴포즈 실행</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker-compose up -d</code></pre></div>\n<ul>\n<li>wordpress가 생성된 것을 확인</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/130312079-a23ce51f-2bcf-4ea1-8585-978510f587e4.JPG\" alt=\"5  wordpress 생성\"></p>\n<ul>\n<li>\n<p>볼륨 마운트를 확인</p>\n<ul>\n<li><code class=\"language-text\">&#39;/var/lib/docker/volumes/폴더명/볼륨명/_data&#39;</code> 형태로 표시가 됩니다.</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker volume inspect 볼륨 데이터 이름</code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/130312080-4a760511-da7f-4dee-87d0-b492018ff13a.JPG\" alt=\"6  volume 확인\"></p>\n<ul>\n<li>\n<p>해당 경로로 진입해서 확인</p>\n<ul>\n<li>root 계정 접속 필요</li>\n<li>mysql과 wordpress의 데이터가 쌓여있는 것을 확인할 수 있습니다.</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/130312081-324791e4-9b13-4d11-837a-a153c6e2f5c2.JPG\" alt=\"6-1  volume 확인\"></p>\n<ul>\n<li>\n<p>도커 컴포즈 정리</p>\n<ul>\n<li><code class=\"language-text\">--volumes</code> 추가 옵션을 통해 볼륨마운트까지 정리된 모습</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker-compose down --volume</code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/130312082-fe218b85-567d-481d-a253-8293f3372d85.JPG\" alt=\"7  최종\"></p>\n<h2 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h2>\n<p><a href=\"https://docs.docker.com/compose/install/\">도커컴포즈 설치</a></p>","frontmatter":{"title":"[따배도] - 도커 컴포즈 빌드에서 운영까지","date":"August 21, 2021","category":"🐳 docker"}}},"pageContext":{"slug":"/docker/[따배도] - 도커 컴포즈 빌드에서 운영까지/","previous":{"fields":{"slug":"/linux/리눅스 스토리지 마운트/"},"frontmatter":{"title":"리눅스 스토리지 마운트","category":"🖥️ linux","draft":false}},"next":{"fields":{"slug":"/Kubernetes/[따배쿠] 아키텍처 & 네임스페이스/"},"frontmatter":{"title":"[따배쿠] 아키텍처 & 네임스페이스","category":"🧭 Kubernetes","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}