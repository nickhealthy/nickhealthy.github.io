{"componentChunkName":"component---src-templates-blog-post-js","path":"/jenkins/Jenkins와 Git 연동 후 Docker Hub에 자동 배포/","result":{"data":{"site":{"siteMetadata":{"title":"Woo's Dev Log","author":"nickhealthy","siteUrl":"https://nickhealthy.github.io","comment":{"disqusShortName":"","utterances":"nickhealthy/nickhealthy.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"3f6ca00c-8421-5eac-a9c3-057543dc5bde","excerpt":"새로운 작업 생성하기 새로운 작업을 선택합니다. 1 작업의 이름 설정과 Freestyle project로 생성 2 GitHub project와 연동 Jenkins와 연동할 GitHub Project의 URL를 입력해준다. 3 소스 코드를 관리해줄 를 입력하고 에 사용자 정보를 등록한다. 사용자 정보 등록은  버튼을 통해 등록이 가능하다. (아래 사진 참고) 또한 어떤 브랜치를 추적하고 빌드할 것인지 정해준다. (master로 지정)…","html":"<h1 id=\"새로운-작업-생성하기\" style=\"position:relative;\"><a href=\"#%EC%83%88%EB%A1%9C%EC%9A%B4-%EC%9E%91%EC%97%85-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"새로운 작업 생성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>새로운 작업 생성하기</h1>\n<ol>\n<li>새로운 작업을 선택합니다.</li>\n</ol>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/107378993-dc625980-6b2f-11eb-972f-616498fdebe5.PNG\" alt=\"1\"></p>\n<ol start=\"2\">\n<li>작업의 이름 설정과 Freestyle project로 생성</li>\n</ol>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/107378999-dcfaf000-6b2f-11eb-8dc3-b37dccf96cdd.PNG\" alt=\"2\"></p>\n<h1 id=\"github-project와-연동\" style=\"position:relative;\"><a href=\"#github-project%EC%99%80-%EC%97%B0%EB%8F%99\" aria-label=\"github project와 연동 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GitHub project와 연동</h1>\n<ol>\n<li>Jenkins와 연동할 GitHub Project의 URL를 입력해준다.</li>\n</ol>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/107379000-dd938680-6b2f-11eb-8a17-b40cbfe1f279.PNG\" alt=\"3\"></p>\n<ol start=\"2\">\n<li>\n<p>소스 코드를 관리해줄 <code class=\"language-text\">Repository URL</code>를 입력하고 <code class=\"language-text\">Credentials</code>에 사용자 정보를 등록한다.</p>\n<ul>\n<li>사용자 정보 등록은 <code class=\"language-text\">Add</code> 버튼을 통해 등록이 가능하다. (아래 사진 참고)</li>\n<li>또한 어떤 브랜치를 추적하고 빌드할 것인지 정해준다. (master로 지정)</li>\n</ul>\n</li>\n</ol>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/107379002-dd938680-6b2f-11eb-82b5-7033841f80b1.PNG\" alt=\"4\"></p>\n<ol start=\"3\">\n<li><code class=\"language-text\">Add</code> 버튼을 누르면 <code class=\"language-text\">Credentials</code>를 생성할 수 있는 창이 생성된다. 여기서 GitHub - Username, Password를 지정</li>\n</ol>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/107379008-de2c1d00-6b2f-11eb-8192-1a7c5a947cae.PNG\" alt=\"5\"></p>\n<h1 id=\"빌드할-내용을-정의\" style=\"position:relative;\"><a href=\"#%EB%B9%8C%EB%93%9C%ED%95%A0-%EB%82%B4%EC%9A%A9%EC%9D%84-%EC%A0%95%EC%9D%98\" aria-label=\"빌드할 내용을 정의 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>빌드할 내용을 정의</h1>\n<ol>\n<li>\n<p>Build 탭에 들어가 <code class=\"language-text\">Add build step</code> 창을 눌러보면 작업을 정의할 수 있습니다.</p>\n<ul>\n<li>저는 Repository - master 브랜치에서 커밋이 발생하면 dockerHub에 이미지를 빌드하고 자동 배포가 되도록 설정하기 위해 <code class=\"language-text\">Execute shell</code>을 선택 후 해당 스크립트를 작성하였습니다.</li>\n</ul>\n</li>\n</ol>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/107599344-8a225500-6c63-11eb-92ae-13d1c0595f26.PNG\" alt=\"6\"></p>\n<blockquote>\n<p>docker hub에 배포하기 위해선 <code class=\"language-text\">docker login</code>이 필요한데 이때 젠킨스 내부에서는 tty(<strong>Teletypewriter</strong>)를 따로 설정해주는 창이 없는거 같아 한번에 로그인 하기위해 <code class=\"language-text\">docker login -u &quot;userID&quot; -p &quot;userPASSWORD&quot;</code> 를 입력해주었다.</p>\n</blockquote>\n<h1 id=\"jenkins---build-now로-테스트\" style=\"position:relative;\"><a href=\"#jenkins---build-now%EB%A1%9C-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"jenkins   build now로 테스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Jenkins - Build Now로 테스트</h1>\n<h3 id=\"dockersock-connect-permission-denied-에러-날때\" style=\"position:relative;\"><a href=\"#dockersock-connect-permission-denied-%EC%97%90%EB%9F%AC-%EB%82%A0%EB%95%8C\" aria-label=\"dockersock connect permission denied 에러 날때 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>docker.sock: connect: permission denied 에러 날때</h3>\n<ol>\n<li>\n<p><code class=\"language-text\">var/run/docker.sock</code> 파일의 권한을 666으로 변경하여 <strong>그룹 내 다른 사용자도 접근 가능하게 변경</strong></p>\n<ul>\n<li><code class=\"language-text\">sudo chmod 666 /var/run/docker.sock</code></li>\n</ul>\n</li>\n<li>\n<p>또는 <code class=\"language-text\">chown</code> 으로 group ownership 변경</p>\n<ul>\n<li><code class=\"language-text\">sudo chown root:docker /var/run/docker.sock</code></li>\n</ul>\n</li>\n<li>젠킨스에 빌드한 내용을 정의한 것처럼 등록한 git repository에서 소스코드를 가져오고,</li>\n<li>도커 파일 이미지를 빌드한 뒤,</li>\n<li>Docker Hub에 <code class=\"language-text\">push</code> 중인 상황입니다.</li>\n</ol>\n<h3 id=\"도커-파일-이미지-빌드\" style=\"position:relative;\"><a href=\"#%EB%8F%84%EC%BB%A4-%ED%8C%8C%EC%9D%BC-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EB%B9%8C%EB%93%9C\" aria-label=\"도커 파일 이미지 빌드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>도커 파일 이미지 빌드</h3>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/107599348-8abaeb80-6c63-11eb-8eb4-faf87a7d494c.PNG\" alt=\"7\"></p>\n<h3 id=\"login--pushingdocker-hub\" style=\"position:relative;\"><a href=\"#login--pushingdocker-hub\" aria-label=\"login  pushingdocker hub permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Login + Pushing[docker hub]</h3>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/107599349-8b538200-6c63-11eb-843c-7ca30690b7ec.PNG\" alt=\"8\"></p>\n<h3 id=\"success\" style=\"position:relative;\"><a href=\"#success\" aria-label=\"success permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SUCCESS</h3>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/107599750-ed60b700-6c64-11eb-90d4-54a036e9125a.PNG\" alt=\"9\"></p>\n<h3 id=\"docker-hub---repositories\" style=\"position:relative;\"><a href=\"#docker-hub---repositories\" aria-label=\"docker hub   repositories permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Docker Hub - Repositories</h3>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/107599754-ee91e400-6c64-11eb-843b-24610250ae08.PNG\" alt=\"10\"></p>\n<p>빌드가 정상적으로 완료되고, docker hub - repositories에 정상적으로 올라온 모습이 보입니다.</p>\n<p>젠킨스를 활용해서 간단한 CI를 구현했지만, 서비스가 점점 커지면서 <strong>파이프라인을 구축해</strong> 좀 더 활용도 높게 개선해야 할 것 같습니다.</p>\n<p>다음 포스팅에서는 <code class=\"language-text\">github - webhook</code>을 설정할 예정!</p>\n<br />\n<a href='#'><small class='up-button'>위로 올라가기💨</small></a>\n<br />","frontmatter":{"title":"Jenkins와 Git 연동 후 Docker Hub에 자동 배포","date":"February 10, 2021","category":"👨‍🍳 jenkins"}}},"pageContext":{"slug":"/jenkins/Jenkins와 Git 연동 후 Docker Hub에 자동 배포/","previous":{"fields":{"slug":"/algorithm/[파이썬알고리즘인터뷰]6.문자열 조작(String Manipulation)/"},"frontmatter":{"title":"[파이썬알고리즘인터뷰]#6 문자열 조작(String Manipulation)","category":"🔥 algorithm","draft":false}},"next":{"fields":{"slug":"/solving-algo/[프로그래머스]/[programmers]_줄서는방법/"},"frontmatter":{"title":"[programmers]줄서는 방법","category":"💯 solving-algo","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}