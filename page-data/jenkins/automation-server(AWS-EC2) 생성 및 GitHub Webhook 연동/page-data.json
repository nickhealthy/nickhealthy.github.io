{"componentChunkName":"component---src-templates-blog-post-js","path":"/jenkins/automation-server(AWS-EC2) 생성 및 GitHub Webhook 연동/","result":{"data":{"site":{"siteMetadata":{"title":"Woo's Dev Log","author":"nickhealthy","siteUrl":"https://nickhealthy.github.io","comment":{"disqusShortName":"","utterances":"nickhealthy/nickhealthy.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"39ca3102-6f5f-5ff7-9312-39ce4f8f6e61","excerpt":"사실 이전에 Jenkins를 이용해서 docker를 자동으로 빌드하는 것을 테스트 해보았는데 생각해보니 webhook을 연동하려면 웹 호스팅이 필요했다. 로컬의 VM으로는 불가능… 결국 AWS-EC2로 빠르게 설정하고 테스트해보았다. AWS - EC2 생성 이때동안 우분투 만 사용했기에 빠른 시작 탭에서 이미지를 구할 수 있었는데  이미지는 AWS-Marketplace에서 찾을 수 있다. 이후 젠키스의 기본 포트는  포트이기 때문에 보안 그룹.인바운드에서  포트를 개방해 주었다. Jenkins…","html":"<blockquote>\n<p>사실 이전에 Jenkins를 이용해서 docker를 자동으로 빌드하는 것을 테스트 해보았는데 생각해보니 webhook을 연동하려면 웹 호스팅이 필요했다. 로컬의 VM으로는 불가능… 결국 AWS-EC2로 빠르게 설정하고 테스트해보았다.</p>\n</blockquote>\n<h1 id=\"aws---ec2-생성\" style=\"position:relative;\"><a href=\"#aws---ec2-%EC%83%9D%EC%84%B1\" aria-label=\"aws   ec2 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AWS - EC2 생성</h1>\n<p>이때동안 우분투 <code class=\"language-text\">AMI</code>만 사용했기에 빠른 시작 탭에서 이미지를 구할 수 있었는데 <code class=\"language-text\">centos</code> 이미지는 AWS-Marketplace에서 찾을 수 있다.</p>\n<img width=\"606\" alt=\"1\" src=\"https://user-images.githubusercontent.com/66216102/107617093-9c67b780-6c92-11eb-97fc-0a22986eadce.PNG\">\n<p>이후 젠키스의 기본 포트는 <code class=\"language-text\">8080</code> 포트이기 때문에 보안 그룹.인바운드에서 <code class=\"language-text\">8080</code> 포트를 개방해 주었다.</p>\n<p><strong>Jenkins와 github webhook를 위한 것</strong>이기 때문에 자세한 EC2 생성은 생략</p>\n<h1 id=\"ec2-putty-접속-후-jenkins-설치\" style=\"position:relative;\"><a href=\"#ec2-putty-%EC%A0%91%EC%86%8D-%ED%9B%84-jenkins-%EC%84%A4%EC%B9%98\" aria-label=\"ec2 putty 접속 후 jenkins 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>EC2 Putty 접속 후 Jenkins 설치</h1>\n<ol>\n<li>yum 패키지 매니저를 최신으로 업데이트</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> yum -y update</code></pre></div>\n<ol start=\"2\">\n<li>\n<p>Jenkins는 자바 기반으로 돌아가는 오픈 소스이기 때문에 자바가 설치되어 있어야한다. 자바설치</p>\n<ul>\n<li>JAVA 8 버전 이상부터 가능</li>\n</ul>\n</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> java-1.8.0</code></pre></div>\n<ol start=\"3\">\n<li>외부로 부터 파일을 다운받기 위한 wget 패키지 설치</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> -y <span class=\"token function\">wget</span></code></pre></div>\n<ol start=\"4\">\n<li>yum이 어디서 Jenkins를 설치해야할 지 알 수 있도록 jenkins - repo 추가</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">wget</span> -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo</code></pre></div>\n<ol start=\"5\">\n<li>Jenkins 를 설치할 때, 파일들이 신뢰할 수 있는 source 로 부터 제공됨을 증명하기 위해 로컬 GPG 키링에 Jenkins GPG key 를 추가해준다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">rpm</span> --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key</code></pre></div>\n<ol start=\"6\">\n<li>Jenkins 설치</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> jenkins</code></pre></div>\n<ol start=\"7\">\n<li>Jenkins 서버 확인 및 시작</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> systemctl status jenkins\n$ <span class=\"token function\">sudo</span> systemctl start jenkins</code></pre></div>\n<ol start=\"8\">\n<li><code class=\"language-text\">8080</code> 포트 LISTENING 중인지 확인</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">netstat</span> -na <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token number\">8080</span></code></pre></div>\n<h1 id=\"jenkins-로그인\" style=\"position:relative;\"><a href=\"#jenkins-%EB%A1%9C%EA%B7%B8%EC%9D%B8\" aria-label=\"jenkins 로그인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Jenkins 로그인</h1>\n<ol>\n<li>초기 접속 비밀번호 확인</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">cat</span> /var/lib/jenkins/secrets/initialAdminPasswor</code></pre></div>\n<ol start=\"2\">\n<li>비밀번호 입력 후 기본 플러그인 설치 및 사용자 계정 생성 후 로그인</li>\n</ol>\n<h1 id=\"github과-연동-및-webhook-setting\" style=\"position:relative;\"><a href=\"#github%EA%B3%BC-%EC%97%B0%EB%8F%99-%EB%B0%8F-webhook-setting\" aria-label=\"github과 연동 및 webhook setting permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GitHub과 연동 및 Webhook Setting</h1>\n<blockquote>\n<p>Webhook은 웹상의 Trigger 같은 존재입니다. GitHub의 지정한 브랜치에 소스가 push 되면 webhook으로 젠킨스에게 알려주어 빌드를 유발하도록 설정합니다.</p>\n</blockquote>\n<ol>\n<li>\n<p>Jenkins [새로운 item - Freestyle project] 생성</p>\n<ul>\n<li>소스코드를 가져온 repo 지정</li>\n<li>자격 증명을 해야하므로 깃헙 아이디/비밀번호 입력</li>\n</ul>\n</li>\n</ol>\n<img width=\"553\" alt=\"1-1\" src=\"https://user-images.githubusercontent.com/66216102/107614945-a5568a00-6c8e-11eb-92a6-43f34acf7685.PNG\">\n<ol start=\"2\">\n<li>[중요] 젠키스가 동작하려면 “어떤 신호를 받아야하는데” 우리는 github의 webhook을 이용하므로 <code class=\"language-text\">GitHub hook trigger for GITScm polling</code>를 체크</li>\n</ol>\n<img width=\"560\" alt=\"1-2\" src=\"https://user-images.githubusercontent.com/66216102/107614948-a5ef2080-6c8e-11eb-9fc6-57e1f2bbbca8.PNG\">\n<ol start=\"3\">\n<li>\n<p>빌드할 내용을 정의</p>\n<ul>\n<li>단지 테스트용이라 화면에 내용이 출력만 되도록 설정하였다.</li>\n</ul>\n</li>\n</ol>\n<img width=\"547\" alt=\"1-3\" src=\"https://user-images.githubusercontent.com/66216102/107614949-a687b700-6c8e-11eb-8879-866588502c56.PNG\">\n<ol start=\"4\">\n<li>\n<p>GitHub의 Webhook 세팅</p>\n<ul>\n<li>webhook를 설정한 repo - settings - Webhooks창에 들어간다.</li>\n<li><code class=\"language-text\">Add webhook</code> 버튼을 클릭</li>\n</ul>\n</li>\n</ol>\n<img width=\"610\" alt=\"2-1\" src=\"https://user-images.githubusercontent.com/66216102/107614955-a7204d80-6c8e-11eb-8061-3b7804c61bd6.PNG\">\n<blockquote>\n<p>Payload URL에 나의 젠키스 서버 주소를 입력 + <code class=\"language-text\">/github-webhook/</code> 뒤에 추가적으로 입력해주어야 한다.</p>\n<p><code class=\"language-text\">Active</code> 버튼을 클릭해 활성화</p>\n</blockquote>\n<ol start=\"5\">\n<li>해당 프로젝트의 git를 PUSH</li>\n<li>젠키스 화면을 보면 자동으로 빌드가 되고 있는 것을 확인할 수 있다.</li>\n</ol>\n<img width=\"628\" alt=\"3\" src=\"https://user-images.githubusercontent.com/66216102/107614958-a7b8e400-6c8e-11eb-8e74-db2a7d57b786.PNG\">\n<ol start=\"7\">\n<li>젠키스 Console Output 화면 - 정상적으로 SUCCESS가 되며 위에 <code class=\"language-text\">echo</code>로 적은 명령어도 정상 출력되었다.</li>\n</ol>\n<img width=\"536\" alt=\"4\" src=\"https://user-images.githubusercontent.com/66216102/107614959-a7b8e400-6c8e-11eb-8f22-dafc0f1ab443.PNG\">\n<ol start=\"8\">\n<li>깃헙 페이지에서도 동일하게 체크 모양으로 바뀌며, 빌드가 성공적으로 된 것을 확인할 수 있다.</li>\n</ol>\n<img width=\"628\" alt=\"2\" src=\"https://user-images.githubusercontent.com/66216102/107614950-a687b700-6c8e-11eb-88f0-96f955e93512.PNG\">\n<h1 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h1>\n<p><a href=\"https://yaboong.github.io/jenkins/2018/05/14/github-webhook-jenkins/\">https://yaboong.github.io/jenkins/2018/05/14/github-webhook-jenkins/</a></p>\n<br />\n<a href='#'><small class='up-button'>위로 올라가기💨</small></a>\n<br />","frontmatter":{"title":"automation-server(AWS-EC2) 생성 및 GitHub Webhook 연동","date":"February 11, 2021","category":"👨‍🍳 jenkins"}}},"pageContext":{"slug":"/jenkins/automation-server(AWS-EC2) 생성 및 GitHub Webhook 연동/","previous":{"fields":{"slug":"/infra/CICD가 뭘까/"},"frontmatter":{"title":"CI/CD가 뭘까?","category":"🧱 infra","draft":false}},"next":{"fields":{"slug":"/algorithm/[파이썬알고리즘인터뷰]6-1.문자열 조작(String-Manipulation)/"},"frontmatter":{"title":"[파이썬알고리즘인터뷰]#6-1 문자열 조작(String Manipulation)","category":"🔥 algorithm","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}