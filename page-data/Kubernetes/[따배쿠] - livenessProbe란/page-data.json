{"componentChunkName":"component---src-templates-blog-post-js","path":"/Kubernetes/[따배쿠] - livenessProbe란/","result":{"data":{"site":{"siteMetadata":{"title":"Woo's Dev Log","author":"nickhealthy","siteUrl":"https://nickhealthy.github.io","comment":{"disqusShortName":"","utterances":"nickhealthy/nickhealthy.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"ba002aea-64ad-59c0-85ea-239df9768f99","excerpt":"livenessProbe의 개념을 익히고, 연습해 봅시다. 해당 파드가 정상 동작을 하는지 주기적으로 체크하는 기능 livenessProbe의 매커니즘 중요! 여기서 중요한 점은 파드가 아닌 컨테이너 자체가 재시작 되는 것이며, 따라서 IP의 주소 또한 바뀌지 않습니다.  : 지정한 IP 주소, port, path에 HTTP GET 요청을 보내, 해당 컨테이너가 응답하는지를 확인합니다. 반환코드가 200이 아닌 값이 나오면 오류. 컨테이너를 다시 시작합니다. default…","html":"<ul>\n<li>livenessProbe의 개념을 익히고, 연습해 봅시다.</li>\n<li><u>해당 파드가 정상 동작을 하는지 주기적으로 체크하는 기능</u></li>\n</ul>\n<h3 id=\"livenessprobe의-매커니즘\" style=\"position:relative;\"><a href=\"#livenessprobe%EC%9D%98-%EB%A7%A4%EC%BB%A4%EB%8B%88%EC%A6%98\" aria-label=\"livenessprobe의 매커니즘 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>livenessProbe의 매커니즘</h3>\n<div class=\"quote-block\">\n<div class=\"quote-block__emoji\">💡</div>\n<div class=\"quote-block__content\" markdown=1>\n<p>중요!</p>\n<p>여기서 중요한 점은 <u>파드가 아닌 컨테이너 자체가 재시작</u> 되는 것이며, 따라서 IP의 주소 또한 바뀌지 않습니다.</p>\n</div>\n</div>\n<ul>\n<li>\n<p><code class=\"language-text\">httpGet</code> : 지정한 IP 주소, port, path에 HTTP GET 요청을 보내, 해당 컨테이너가 응답하는지를 확인합니다.</p>\n<ul>\n<li>반환코드가 <strong>200이 아닌 값이 나오면 오류. 컨테이너를 다시 시작합니다.</strong></li>\n<li>default: 요청의 오류가 연속으로 3번 이상 발생한다면, 컨테이너 자체를 다시 <code class=\"language-text\">restart</code> 시켜주는 것입니다.</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">tcpSocket</code> : 지정된 포트에 TCP 연결을 시도합니다.</p>\n<ul>\n<li><strong>연결되지 않으면 컨테이너를 다시 시작합니다.</strong></li>\n<li>default: 요청의 오류가 연속으로 3번이상 발생한다면, 컨테이너 자체를 다시 <code class=\"language-text\">restart</code> 시켜주는 것입니다.</li>\n</ul>\n</li>\n<li><code class=\"language-text\">exec</code> : exec 명령을 전달하고 명령의 종료코드가 <strong>0이 아니면 컨테이너를 다시 시작합니다.</strong></li>\n</ul>\n<h2 id=\"lab-1---livenessprobe-사용하기\" style=\"position:relative;\"><a href=\"#lab-1---livenessprobe-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"lab 1   livenessprobe 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>LAB 1 - livenessProbe 사용하기</h2>\n<ul>\n<li><em>pod-nginx-liveness.yaml</em> 파일 생성</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Pod\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">-</span>pod<span class=\"token punctuation\">-</span>liveness\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">-</span>container\n      <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">:</span><span class=\"token number\">1.14</span>\n      <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n          <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n      <span class=\"token key atrule\">livenessProbe</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">httpGet</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /\n          <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span></code></pre></div>\n<ul>\n<li>\n<p>pod 생성 및 상세정보 출력</p>\n<ul>\n<li>yaml 파일에 설정한 값 이외에 자동 생성된 default 값을 확인(아래의 사진에 보이는 토대로 작성함)</li>\n<li><code class=\"language-text\">delay</code> : pod 구동 후 0초 후 상태 체크를 실행하는 것을 의미함</li>\n<li><code class=\"language-text\">timeout</code> : health-check 한 후 응답을 기다리는 1초 동안 반응하지 않으면 실패로 간주</li>\n<li><code class=\"language-text\">period</code> : 10초마다 한번씩 상태 체크</li>\n<li><code class=\"language-text\">success</code> : 1번만 성공하면 성공으로 간주</li>\n<li><code class=\"language-text\">failure</code> : 연속에서 3번 요청이 실패하면 컨테이너 재시작</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubectl create -f pod-nginx-liveness.yaml\n$ kubectl describe pods nginx-pod-liveness</code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/136168008-db00f7b4-335b-41c2-a08e-7a00ecb3078c.JPG\" alt=\"1  파드 상세정보\"></p>\n<ul>\n<li>\n<p>파드 상세 정보를 yaml 파일 확인</p>\n<ul>\n<li>이를 복사해 새로운 yaml파일을 작성할 수 있습니다.</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubectl get pods nginx-pod-liveness -o yaml</code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/136167991-4d2ef278-8f95-4b6f-81d9-1329485e11dc.JPG\" alt=\"2  파드 상세정보\"></p>\n<h3 id=\"검증\" style=\"position:relative;\"><a href=\"#%EA%B2%80%EC%A6%9D\" aria-label=\"검증 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>검증</h3>\n<ul>\n<li>smlinux/unhealthy 해당 이미지는 5번의 요청만을 허용해주고, 이후 500번의 에러코드를 응답하는 컨테이너임</li>\n<li>해당 컨테이너의 <em>app.js</em> 코드</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> http <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> os <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'os'</span><span class=\"token punctuation\">)</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Kubia server starting...'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">var</span> requestCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">handler</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">request<span class=\"token punctuation\">,</span> response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Received request from '</span> <span class=\"token operator\">+</span> request<span class=\"token punctuation\">.</span>connection<span class=\"token punctuation\">.</span>remoteAddress<span class=\"token punctuation\">)</span>\n  requestCount<span class=\"token operator\">++</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>requestCount <span class=\"token operator\">></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    response<span class=\"token punctuation\">.</span><span class=\"token function\">writeHead</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span>\n    response<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I'm not well. Please restart me!\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span>\n  <span class=\"token punctuation\">}</span>\n  response<span class=\"token punctuation\">.</span><span class=\"token function\">writeHead</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n  response<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You've hit \"</span> <span class=\"token operator\">+</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">hostname</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> www <span class=\"token operator\">=</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">createServer</span><span class=\"token punctuation\">(</span>handler<span class=\"token punctuation\">)</span>\nwww<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">8080</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li><em>pod-liveness.yaml</em> 파일 생성</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Pod\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> liveness<span class=\"token punctuation\">-</span>pod\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> unhealthy<span class=\"token punctuation\">-</span>container\n      <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> smlinux/unhealthy\n      <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n          <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n      <span class=\"token key atrule\">livenessProbe</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">httpGet</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /\n          <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span></code></pre></div>\n<ul>\n<li>\n<p>50초 동안은 오류로 취급안하고 정상 작동하는 모습</p>\n<ul>\n<li>위에서 default로 설정된 <code class=\"language-text\">period</code> 시간은 10초이고, 5번 응답하는 이미지 이므로 대략 50초 가량은 오류가 나지 않음</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/136167999-44cff26e-f621-4333-b02f-539c0af6bccd.JPG\" alt=\"3  라이브니스 상세정보확인\"></p>\n<ul>\n<li>\n<p>50초 이후부터 오류가 발생하고, 3번 이상 오류 발생 시 컨테이너가 재생성되는 모습</p>\n<ul>\n<li>default 값의 실패 3번 이후, 컨테이너가 재시작됨</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/136168005-46631e25-1f24-44a7-9dc6-bc06f90c9040.JPG\" alt=\"4  검증\"></p>","frontmatter":{"title":"[따배쿠] - livenessProbe란","date":"October 06, 2021","category":"🧭 Kubernetes"}}},"pageContext":{"slug":"/Kubernetes/[따배쿠] - livenessProbe란/","previous":{"fields":{"slug":"/error/쿠버네티스 work-node 서버 종료 이후 rejoin/"},"frontmatter":{"title":"쿠버네티스 work-node 서버 종료 이후 rejoin","category":"🤔 error","draft":false}},"next":null}},"staticQueryHashes":["3128451518","521680639"]}