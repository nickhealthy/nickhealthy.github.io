{"componentChunkName":"component---src-templates-blog-post-js","path":"/Kubernetes/[따배쿠] 아키텍처 & 네임스페이스/","result":{"data":{"site":{"siteMetadata":{"title":"Woo's Dev Log","author":"nickhealthy","siteUrl":"https://nickhealthy.github.io","comment":{"disqusShortName":"","utterances":"nickhealthy/nickhealthy.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"cde2ba55-9a44-5dec-9324-8e30ef75bb1b","excerpt":"쿠버네티스의 동작방식과 네임스페이스 구조를 알아봅시다! 쿠버네티스 아키텍처 쿠버네티스에 사용할 컨테이너 이미지를 저장소에 이미지 push 컨테이너 이미지 저장소는 사내망이 될 수도, 도커허브처럼 퍼블릭 공간도 될 수 있습니다. 사용자가 control-plane 노드에서 의 yaml 형태든, CLI…","html":"<p>쿠버네티스의 동작방식과 네임스페이스 구조를 알아봅시다!</p>\n<h2 id=\"쿠버네티스-아키텍처\" style=\"position:relative;\"><a href=\"#%EC%BF%A0%EB%B2%84%EB%84%A4%ED%8B%B0%EC%8A%A4-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98\" aria-label=\"쿠버네티스 아키텍처 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>쿠버네티스 아키텍처</h2>\n<img width=\"695\" alt=\"2  쿠버네티스 아키텍처\" src=\"https://user-images.githubusercontent.com/66216102/130322276-2ec1f64a-3e9c-45e0-8d17-ffab256f1c67.png\">\n<ol>\n<li>\n<p>쿠버네티스에 사용할 컨테이너 이미지를 저장소에 이미지 push</p>\n<ul>\n<li>컨테이너 이미지 저장소는 사내망이 될 수도, 도커허브처럼 퍼블릭 공간도 될 수 있습니다.</li>\n</ul>\n</li>\n<li>사용자가 control-plane 노드에서 <code class=\"language-text\">kubectl</code>의 yaml 형태든, CLI 형태든 명령어를 입력하게 되면,</li>\n<li><code class=\"language-text\">REST API Server</code>가 명령어를 받아서 명령어에 맞게 요청을 받음</li>\n<li><code class=\"language-text\">etcd</code>의 상태 정보를 확인</li>\n<li>이때 어느 노드에 배치하는 것이 가장 좋은지 판단 및 배치 해주는 것이 <code class=\"language-text\">Scheduler</code> 입니다. 스케줄러는 <code class=\"language-text\">REST API Server</code>에게 적절하게 판단해 응답</li>\n<li>응답 받은 값을 가지고 <code class=\"language-text\">REST API Server</code>는 해당하는 노드의 <code class=\"language-text\">kubelet</code>에게 요청</li>\n<li>\n<p>요청을 받은 <code class=\"language-text\">kubelet</code>은 해당 명령어를 실제 컨테이너 엔진을 담당하는 <code class=\"language-text\">docker 데몬</code> 전달</p>\n<ul>\n<li><u>docker 명령어로 변환해서 docker에게 보내줍니다.</u></li>\n</ul>\n</li>\n<li>도커 데몬은 최종적으로 이미지 저장소에서 지정한 컨테이너를 불러와 실행</li>\n<li>컨트롤러는 지속적으로 감시해 파드 개수를 보장</li>\n</ol>\n<h2 id=\"쿠버네티스-컴포넌트\" style=\"position:relative;\"><a href=\"#%EC%BF%A0%EB%B2%84%EB%84%A4%ED%8B%B0%EC%8A%A4-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8\" aria-label=\"쿠버네티스 컴포넌트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>쿠버네티스 컴포넌트</h2>\n<div class=\"quote-block\">\n<div class=\"quote-block__emoji\">💡</div>\n<div class=\"quote-block__content\" markdown=1>\n<p>알아두기</p>\n<p>모든 컴포넌트는 마스터 노드의 API Server를 거쳐 운영됩니다.</p>\n</div>\n</div>\n<ul>\n<li>\n<p>etcd</p>\n<ul>\n<li><u>쿠버네티스의 자원 및 상태를 저장하는 컴포넌트</u></li>\n<li>key:value 형태로 상태를 저장함</li>\n<li><code class=\"language-text\">kubelet</code>안에는 <code class=\"language-text\">cAdvisor</code>가 있는데 워커노드의 상태정보를 모니터링하고, 해당 정보를 마스터노드의 <code class=\"language-text\">REST API server</code>에 전달 후 <code class=\"language-text\">etcd</code>에 전달</li>\n</ul>\n</li>\n<li>\n<p>schduler</p>\n<ul>\n<li>자원을 실행시킬 적절한 워커노드를 선정 후, <code class=\"language-text\">REST API Server</code> 반환</li>\n</ul>\n</li>\n<li>\n<p>controller</p>\n<ul>\n<li>정의된 자원의 수만큼 유지되도록 모니터링 및 장애 발생 시 대응하도록 하는 컴포넌트</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"namespace-란-\" style=\"position:relative;\"><a href=\"#namespace-%EB%9E%80-\" aria-label=\"namespace 란  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Namespace 란 ?</h2>\n<ul>\n<li><u><strong>물리적으로 하나의 클러스터(서버) 내에서 네임스페이스를 통해 논리적으로 구분해 줄 수 있습니다.</strong></u></li>\n<li>\n<p>K8S API 종류 중 하나</p>\n<ul>\n<li>클러스터 하나를 <u><strong>여러 개의 논리적인 단위로 나눠서 사용</strong></u></li>\n<li><u><strong>용도에 따라 실행해야 하는 앱</strong></u>을 구분할 때 사용</li>\n</ul>\n</li>\n<li>클러스터를 구성하게 되면 <u><strong>기본적으로 4개의 네임스페이스가 존재</strong></u>하고, 미설정 시 기본 네임스페이스를 사용</li>\n</ul>\n<div class=\"quote-block\">\n<div class=\"quote-block__emoji\">💡</div>\n<div class=\"quote-block__content\" markdown=1>\n<p>알아두면 좋은 정보!</p>\n<p><code class=\"language-text\">kubectl get pod</code>(파드가 없는 상태에서) 명령어 실행 시, <em>No resources found in default namespace.</em><br>\n메시지를 볼 수 있는데 이는 네임스페이스를 지정해주지 않을 시, 기본 네임스페이스를 사용한다는 것을 유추할 수 있습니다.</p>\n</div>\n</div>\n<h2 id=\"조금-더-자세히-알아보기\" style=\"position:relative;\"><a href=\"#%EC%A1%B0%EA%B8%88-%EB%8D%94-%EC%9E%90%EC%84%B8%ED%9E%88-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0\" aria-label=\"조금 더 자세히 알아보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>조금 더 자세히 알아보기</h2>\n<ul>\n<li>[nginx.yaml] 파일로 만들기</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Pod\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> mypod\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">:</span><span class=\"token number\">1.14</span>\n      <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx\n      <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">443</span></code></pre></div>\n<ul>\n<li>\n<p>yaml 파일로 실행 및 확인</p>\n<ul>\n<li><u>아무 옵션도 주지 않았으므로 default 네임스페이스에 생성됨</u></li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubectl create -f nginx.yaml\n$ kubectl get pods</code></pre></div>\n<ul>\n<li>blue 네임스페이스 생성</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubectl create namespace blue</code></pre></div>\n<ul>\n<li>\n<p>orange 네임스페이스에 yaml 파일로 생성 &#x26; 실행</p>\n<ul>\n<li><code class=\"language-text\">--dry-run</code> 옵션은 실제로 실행하지 않고, 실행여부를 확인</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubectl create namespace orange --dry-run -o yaml <span class=\"token operator\">></span> orange-ns.yaml\n$ kubectl create -f orange-ns.yaml -n orange</code></pre></div>\n<ul>\n<li>blue 네임스페이스에서 실행하기</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubectl create -f nginx.yaml -n blue</code></pre></div>\n<ul>\n<li>yaml.metadata 에 네임스페이스를 지정해 실행</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Pod\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> mypod\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> orange <span class=\"token comment\"># 네임스페이스 지정</span>\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">:</span><span class=\"token number\">1.14</span>\n      <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx\n      <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">443</span></code></pre></div>\n<p>이처럼 CLI, yaml 2가지의 방식을 통해 실행할 수 있습니다.</p>\n<h2 id=\"기본-네임스페이스를-변경하기\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%B3%B8-%EB%84%A4%EC%9E%84%EC%8A%A4%ED%8E%98%EC%9D%B4%EC%8A%A4%EB%A5%BC-%EB%B3%80%EA%B2%BD%ED%95%98%EA%B8%B0\" aria-label=\"기본 네임스페이스를 변경하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기본 네임스페이스를 변경하기</h2>\n<ul>\n<li><strong><u>context를 사용자가 config에 등록하여 default 클러스터를 스위칭할 수 있습니다.</u></strong></li>\n<li><code class=\"language-text\">config</code> 명령어를 통해 기본 context 정보 확인</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubectl config view</code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/130321493-5d6d435a-4e72-456a-9cf9-9f9fb373a468.JPG\" alt=\"1  context 등록\"></p>\n<ul>\n<li>\n<p><code class=\"language-text\">config set-context</code> 명령어를 통해 새로운 context를 추가</p>\n<ul>\n<li>blue : 이름</li>\n<li>—cluster= 클러스터 이름</li>\n<li>—user : 쿠버네티스 유저</li>\n<li>—namespace : 지정할 네임스페이스</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubectl config set-context blue --cluster<span class=\"token operator\">=</span>kubernetes --user<span class=\"token operator\">=</span>kubernetes-admin --namespace<span class=\"token operator\">=</span>blue</code></pre></div>\n<ul>\n<li>기본 네임스페이스를 blue 네임스페이스로 변경</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubectl config use-context blue</code></pre></div>\n<ul>\n<li>\n<p>현재 지정된 네임스페이스 확인</p>\n<ul>\n<li>파드들을 생성할 때 아무 옵션을 주지 않는다면, 이제 blue 네임스페이스에 생성됩니다.</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubectl config current-context</code></pre></div>\n<ul>\n<li>다시 원래 default 네임스페이스로 돌리기</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubectl config use-context kubernetes-admin@kubernetes</code></pre></div>\n<ul>\n<li>네임스페이스 삭제</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubectl delete namespace blue</code></pre></div>\n<div class=\"quote-block\">\n<div class=\"quote-block__emoji\">💡</div>\n<div class=\"quote-block__content\" markdown=1>\n<p>주의사항!</p>\n<p>하나의 네임스페이스 안에 여러 리소스가 존재하게 되는데, 네임스페이스를 지우게 된다면 안에 있는 리소스 모두 같이 삭제됩니다.</p>\n</div>\n</div>\n<h2 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h2>\n<p><a href=\"https://kubernetes.io/ko/docs/concepts/overview/components/\">쿠버네티스 공홈 컴포넌트</a><br>\n<a href=\"https://bcho.tistory.com/1258\">쿠버네티스 아키텍처</a></p>","frontmatter":{"title":"[따배쿠] 아키텍처 & 네임스페이스","date":"August 21, 2021","category":"🧭 Kubernetes"}}},"pageContext":{"slug":"/Kubernetes/[따배쿠] 아키텍처 & 네임스페이스/","previous":{"fields":{"slug":"/docker/[따배도] - 도커 컴포즈 빌드에서 운영까지/"},"frontmatter":{"title":"[따배도] - 도커 컴포즈 빌드에서 운영까지","category":"🐳 docker","draft":false}},"next":{"fields":{"slug":"/Kubernetes/[따배쿠] - 쿠버네티스 pod(Single  Multi container)/"},"frontmatter":{"title":"[따배쿠] - 쿠버네티스 pod(Single / Multi container)","category":"🧭 Kubernetes","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}