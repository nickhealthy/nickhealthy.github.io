{"componentChunkName":"component---src-templates-blog-post-js","path":"/devops/KOSTA_Ansible을 이용한 AWS 클라우드 DevOps 자동화 구현-4/","result":{"data":{"site":{"siteMetadata":{"title":"Woo's Dev Log","author":"nickhealthy","siteUrl":"https://nickhealthy.github.io","comment":{"disqusShortName":"","utterances":"nickhealthy/nickhealthy.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"833cff7a-dfc1-5fd1-acff-1340f54baf7c","excerpt":"학습목표 앞장에서 AWS의 콘솔로 진행한 LAB를 AWS CLI를 이용하여 자원(서비스) 다뤄보기 AWS와 Ansible를 이용해 자원 구축 및 서버의 환경을 스크립트화 시키기 AWS CLI 설치와 설정 AWS 명령줄 인터페이스(CLI)는 AWS 서비스를 관리하는 통합 도구입니다. 편한 방식으로 OpenStack이 있는데 이는 웹 UI에서 서비스를 관리할 수 있는 것을 제공해줍니다. 하지만 클라우드 자원을 다룰 수 있는 범위가 대략 80% 정도입니다. 여러 AWS…","html":"<h3 id=\"학습목표\" style=\"position:relative;\"><a href=\"#%ED%95%99%EC%8A%B5%EB%AA%A9%ED%91%9C\" aria-label=\"학습목표 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>학습목표</h3>\n<ul>\n<li>앞장에서 AWS의 콘솔로 진행한 LAB를 AWS CLI를 이용하여 자원(서비스) 다뤄보기</li>\n<li>AWS와 Ansible를 이용해 자원 구축 및 서버의 환경을 스크립트화 시키기</li>\n</ul>\n<h2 id=\"aws-cli-설치와-설정\" style=\"position:relative;\"><a href=\"#aws-cli-%EC%84%A4%EC%B9%98%EC%99%80-%EC%84%A4%EC%A0%95\" aria-label=\"aws cli 설치와 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AWS CLI 설치와 설정</h2>\n<ul>\n<li>\n<p>AWS 명령줄 인터페이스(CLI)는 AWS 서비스를 관리하는 통합 도구입니다.</p>\n<ul>\n<li>편한 방식으로 OpenStack이 있는데 이는 웹 UI에서 서비스를 관리할 수 있는 것을 제공해줍니다. 하지만 클라우드 자원을 다룰 수 있는 범위가 대략 80% 정도입니다.</li>\n</ul>\n</li>\n<li>\n<p><u>여러 AWS 서비스를 명령줄에서 제어하고 스크립트를 통해 자동화</u>할 수 있습니다.</p>\n<ul>\n<li>AWS CLI를 사용하여 서비스의 기능을 살펴보고 리소스를 관리할 셀 스크립트를 개발할 수 있습니다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"cli-설치-및-cli-로그인\" style=\"position:relative;\"><a href=\"#cli-%EC%84%A4%EC%B9%98-%EB%B0%8F-cli-%EB%A1%9C%EA%B7%B8%EC%9D%B8\" aria-label=\"cli 설치 및 cli 로그인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CLI 설치 및 CLI 로그인</h3>\n<ul>\n<li>AWS-SDK boto3 및 AWS-CLI 설치</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> python-pip\n$ <span class=\"token function\">sudo</span> pip <span class=\"token function\">install</span> boto\n$ <span class=\"token function\">curl</span> <span class=\"token string\">\"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\"</span> -o <span class=\"token string\">\"awscliv2.zip\"</span>\n$ <span class=\"token function\">unzip</span> awscliv2.zip\n$ <span class=\"token function\">sudo</span> ./aws/install</code></pre></div>\n<ul>\n<li>\n<p>CLI를 다루기 위한 서버 설정</p>\n<ul>\n<li><code class=\"language-text\">complete -C &#39;/usr/local/bin/aws_completer&#39; aws</code> : bash 쉘 자동완성 하기 위한 설정</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">vi</span> ~/.bash_profile\n<span class=\"token comment\"># .bash_profile에 해당 명령어 넣기 >> complete -C '/usr/local/bin/aws_completer' aws</span>\n<span class=\"token comment\"># PATH=$PATH:$HOME/bin</span>\n<span class=\"token comment\"># export PATH</span>\n$ <span class=\"token builtin class-name\">source</span> ~/.bash_profile</code></pre></div>\n<ul>\n<li>CLI를 사용하기 위한 AWS 계정 로그인</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># aws에 로그인하기 위한 명령어</span>\n$ aws configure\n$ 엑세스 키, 시크릿 키 입력\n$ Default region name <span class=\"token punctuation\">[</span>None<span class=\"token punctuation\">]</span>: 리전 네임입력\n$ Default output <span class=\"token function\">format</span> <span class=\"token punctuation\">[</span>None<span class=\"token punctuation\">]</span>: 데이터 포맷을 결정</code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/133728195-10115cef-043c-4af2-a353-3dba7d2f3060.JPG\" alt=\"1  aws 로그인\"></p>\n<ul>\n<li>검증 - CLI를 이용하여 S3 버킷 조회</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/133728198-293f2580-270f-4371-b6a3-9b04dec1ffd1.JPG\" alt=\"2  s3 버킷조회\"></p>\n<h2 id=\"lab-1---cli-를-활용하여-vpc와-서브넷-생성하기\" style=\"position:relative;\"><a href=\"#lab-1---cli-%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%98%EC%97%AC-vpc%EC%99%80-%EC%84%9C%EB%B8%8C%EB%84%B7-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"lab 1   cli 를 활용하여 vpc와 서브넷 생성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>LAB 1 - CLI 를 활용하여 VPC와 서브넷 생성하기</h2>\n<h4 id=\"aws-cli를-이용하여-vpc와-서브넷-자원을-생성해-봅시다\" style=\"position:relative;\"><a href=\"#aws-cli%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-vpc%EC%99%80-%EC%84%9C%EB%B8%8C%EB%84%B7-%EC%9E%90%EC%9B%90%EC%9D%84-%EC%83%9D%EC%84%B1%ED%95%B4-%EB%B4%85%EC%8B%9C%EB%8B%A4\" aria-label=\"aws cli를 이용하여 vpc와 서브넷 자원을 생성해 봅시다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AWS-CLI를 이용하여 VPC와 서브넷 자원을 생성해 봅시다.</h4>\n<ul>\n<li>\n<p>VPC를 CIDR 값을 정해 만들기</p>\n<ul>\n<li><code class=\"language-text\">--output</code> 옵션 : 결과물을 테이블 형식으로 보기</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ aws ec2 create-vpc --cidr-block <span class=\"token number\">172.16</span>.0.0/16 --output table\n$ aws ec2 describe-vpcs --output table</code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/133732739-67aa606a-0241-479a-878e-2fea073d4478.JPG\" alt=\"1  vpc 생성\"></p>\n<ul>\n<li>\n<p>서브넷 만들기</p>\n<ul>\n<li>AZ - a, c 두 개의 서브넷 생성</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 변수 선언</span>\n$ <span class=\"token assign-left variable\">MY_VPC</span><span class=\"token operator\">=</span>vpc-035eb45dd473aa061\n<span class=\"token comment\"># 서브넷 생성</span>\n$ aws ec2 create-subnet --vpc-id <span class=\"token variable\">$MY_VPC</span> --cidr-block <span class=\"token number\">172.16</span>.0.0/20 --availability-zone ap-northeast-2a --output table\n$ aws ec2 create-subnet --vpc-id <span class=\"token variable\">$MY_VPC</span> --cidr-block <span class=\"token number\">172.16</span>.32.0/20 --availability-zone ap-northeast-2c --output table</code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/133732748-a91cf6ef-9d75-4f90-9211-69c7bedba268.JPG\" alt=\"2  서브넷 설정\"></p>\n<ul>\n<li>\n<p>상세 정보 보기 (필터링 포함)</p>\n<ul>\n<li>MY_VPC의 서브넷 두개가 생성된 것을 확인할 수 있음</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/133732749-c2927641-3969-4c6d-b497-4192c33e1191.JPG\" alt=\"3  상세정보보기\"></p>\n<h2 id=\"lab-2---서브넷을-퍼블릭-서브넷으로-만들기\" style=\"position:relative;\"><a href=\"#lab-2---%EC%84%9C%EB%B8%8C%EB%84%B7%EC%9D%84-%ED%8D%BC%EB%B8%94%EB%A6%AD-%EC%84%9C%EB%B8%8C%EB%84%B7%EC%9C%BC%EB%A1%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"lab 2   서브넷을 퍼블릭 서브넷으로 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>LAB 2 - 서브넷을 퍼블릭 서브넷으로 만들기</h2>\n<h4 id=\"앞서-만들었던-프라이빗-서브넷을-퍼블릭-서브넷으로-만들기\" style=\"position:relative;\"><a href=\"#%EC%95%9E%EC%84%9C-%EB%A7%8C%EB%93%A4%EC%97%88%EB%8D%98-%ED%94%84%EB%9D%BC%EC%9D%B4%EB%B9%97-%EC%84%9C%EB%B8%8C%EB%84%B7%EC%9D%84-%ED%8D%BC%EB%B8%94%EB%A6%AD-%EC%84%9C%EB%B8%8C%EB%84%B7%EC%9C%BC%EB%A1%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"앞서 만들었던 프라이빗 서브넷을 퍼블릭 서브넷으로 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>앞서 만들었던 프라이빗 서브넷을 퍼블릭 서브넷으로 만들기</h4>\n<ul>\n<li>인터넷 게이트웨이 만들기</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ aws ec2 create-internet-gateway --output table\n<span class=\"token comment\"># 상세 정보 확인</span>\n$ aws ec2 describe-internet-gateways --output table</code></pre></div>\n<ul>\n<li>인터넷 게이트웨이를 VPC에 연결하기</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ aws ec2 attach-internet-gateway --vpc-id <span class=\"token variable\">$MY_VPC</span> --internet-gateway-id <span class=\"token variable\">$MY_IGW</span>\n$ aws ec2 describe-internet-gateways --output table</code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/133732751-a53599dc-fd8c-4fb3-b13b-7a00893c2bcf.JPG\" alt=\"4  인터넷게이트웨이 생성 및 어태치\"></p>\n<ul>\n<li>라우팅 테이블 만들기</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ aws ec2 create-route-table --vpc-id <span class=\"token variable\">$MY_VPC</span> --output table\n$ aws ec2 describe-route-tables --output table</code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/133732753-d5cf2278-ac53-4d9f-9e0a-5562ec0e401a.JPG\" alt=\"5  라우팅 테이블 생성\"></p>\n<ul>\n<li>\n<p>라우팅 테이블에 인터넷 게이트웨이를 추가</p>\n<ul>\n<li>리턴 결과 true 출력</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 변수 설정</span>\n$ <span class=\"token assign-left variable\">MY_RTB</span><span class=\"token operator\">=</span>rtb-0ff265e3570259a34\n$ aws ec2 create-route --route-table-id <span class=\"token variable\">$MY_RTB</span> --destination-cidr-block <span class=\"token number\">0.0</span>.0.0/0 <span class=\"token punctuation\">\\</span>\n--gateway-id <span class=\"token variable\">$MY_IGW</span> --output table</code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/133732754-9cd0aa24-db3f-4b86-8f65-825406ab4502.JPG\" alt=\"6  인터넷 게이트웨이 라우팅에 연결\"></p>\n<ul>\n<li>라우팅 테이블 안에 인터넷 게이트웨이가 추가 된 것을 확인</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 상세정보 확인</span>\n$ aws ec2 describe-route-tables --route-table-id <span class=\"token variable\">$MY_RTB</span> --output table\n$ aws ec2 describe-subnets --filters <span class=\"token string\">\"Name=vpc-id,Values=<span class=\"token variable\">$MY_VPC</span>\"</span> <span class=\"token punctuation\">\\</span>\n--query <span class=\"token string\">'Subnets[*].{ID:SubnetId,CIDR:CidrBlock}'</span></code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/133732757-02a28c48-acbd-4032-83f2-73eb9d7c1252.JPG\" alt=\"6-1  인터넷 게이트웨이 라우팅에 연결\"></p>\n<ul>\n<li>서브넷을 라우팅에 테이블 연결</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 변수 설정</span>\n$ <span class=\"token assign-left variable\">MY_SID1</span><span class=\"token operator\">=</span>subnet-0775ed14f85759e14\n$ <span class=\"token assign-left variable\">MY_SID2</span><span class=\"token operator\">=</span>subnet-08c42a258a37d56e1\n\n$ aws ec2 associate-route-table --subnet-id <span class=\"token variable\">$MY_SID1</span> --route-table-id <span class=\"token variable\">$MY_RTB</span>\n$ aws ec2 associate-route-table --subnet-id <span class=\"token variable\">$MY_SID2</span> --route-table-id <span class=\"token variable\">$MY_RTB</span></code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/133732758-4d56ddb7-c99b-4ed6-9f3b-4d04092a23cf.JPG\" alt=\"7  서브넷과 라우팅 테이블 연결\"></p>\n<ul>\n<li>\n<p>VPC-Subnet에 <u>자동 할당 IP</u> 수정을 해주는 것</p>\n<ul>\n<li><u>앞 수업 시간에 설명했던 “공인 IP 활성화” 부분을 뜻함</u></li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ aws ec2 modify-subnet-attribute --subnet-id <span class=\"token variable\">$MY_SID1</span> --map-public-ip-on-launch\n$ aws ec2 modify-subnet-attribute --subnet-id <span class=\"token variable\">$MY_SID2</span> --map-public-ip-on-launch</code></pre></div>\n<ul>\n<li>\n<p>VPC-DNS 호스트 이름 편집</p>\n<ul>\n<li>공인 IP 생성 시 자동으로 생성해주는 DNS 설정을 하는 것임</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ aws ec2 modify-vpc-attribute --vpc-id <span class=\"token variable\">$MY_VPC</span> --enable-dns-hostnames</code></pre></div>\n<h2 id=\"lab-3---키페어-보안그룹-만들기\" style=\"position:relative;\"><a href=\"#lab-3---%ED%82%A4%ED%8E%98%EC%96%B4-%EB%B3%B4%EC%95%88%EA%B7%B8%EB%A3%B9-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"lab 3   키페어 보안그룹 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>LAB 3 - 키페어, 보안그룹 만들기</h2>\n<ul>\n<li>\n<p>키페어 생성 후, 키를 해당 서버에 저장하기</p>\n<ul>\n<li><code class=\"language-text\">--output</code>를 text 형식으로 만들어서 *<em>.pem</em> 파일을 생성</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ aws ec2 create-key-pair --key-name MyKeyPair --query <span class=\"token string\">'KeyMaterial'</span> <span class=\"token punctuation\">\\</span>\n--output text <span class=\"token operator\">></span> MyKeyPair.pem</code></pre></div>\n<ul>\n<li>키 페어에 대한 권한 설정</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">chmod</span> <span class=\"token number\">400</span> MyKeyPair.pem</code></pre></div>\n<ul>\n<li>보안그룹 생성</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ aws ec2 create-security-group --group-name HTTP_SSH_Access <span class=\"token punctuation\">\\</span>\n--description <span class=\"token string\">\"Security group for HTTP_SSH access\"</span> --vpc-id <span class=\"token variable\">$MY_VPC</span>\n$ aws ec2 describe-security-groups --output table</code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/133739462-d7019b0b-5eba-433a-a155-2b9d0d06a441.JPG\" alt=\"8  보안그룹 생성 및 설정\"></p>\n<ul>\n<li>EC2 서버의 아이피 추출하기</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token assign-left variable\">MY_IP</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">curl</span> http://checkip.amazonaws.com/<span class=\"token variable\">)</span></span>\n<span class=\"token comment\"># 서버의 아이피 - 13.125.xxx.133</span>\n$ <span class=\"token function\">curl</span> http://checkip.amazonaws.com/</code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/133739454-9715687b-f922-48b2-97fd-81b7a1c2a74a.JPG\" alt=\"9  나의 아이피 추출\"></p>\n<ul>\n<li>\n<p>보안 그룹 인바운드 설정</p>\n<ul>\n<li>인바운드는 <code class=\"language-text\">ingress</code>, 아웃바운드는 <code class=\"language-text\">egress</code> 명령어</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token assign-left variable\">MY_SG</span><span class=\"token operator\">=</span>sg-05b321deb1c4e237d\n<span class=\"token comment\"># SSH 포트와 HTTP 포트를 설정</span>\n$ aws ec2 authorize-security-group-ingress --group-id <span class=\"token variable\">$MY_SG</span> --protocol tcp <span class=\"token punctuation\">\\</span>\n--port <span class=\"token number\">22</span> --cidr <span class=\"token variable\">$MY_IP</span>/32\n$ aws ec2 authorize-security-group-ingress --group-id <span class=\"token variable\">$MY_SG</span> --protocol tcp <span class=\"token punctuation\">\\</span>\n--port <span class=\"token number\">80</span> --cidr <span class=\"token number\">0.0</span>.0.0/0</code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/133739456-f9e6a69b-42a1-452d-9329-c79c4c0d17a0.JPG\" alt=\"10  보안그룹 인바운드 설정\"></p>\n<h2 id=\"lab-4---볼륨-및-인스턴스-만들기\" style=\"position:relative;\"><a href=\"#lab-4---%EB%B3%BC%EB%A5%A8-%EB%B0%8F-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"lab 4   볼륨 및 인스턴스 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>LAB 4 - 볼륨 및 인스턴스 만들기</h2>\n<ul>\n<li>추가 볼륨을 생성할 json 파일 생성</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">$ vi mapping.json\n\n<span class=\"token punctuation\">[</span>\n   <span class=\"token punctuation\">{</span>\n     <span class=\"token property\">\"DeviceName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/dev/xvda\"</span><span class=\"token punctuation\">,</span>\n     <span class=\"token property\">\"Ebs\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token property\">\"VolumeSize\"</span><span class=\"token operator\">:</span> <span class=\"token number\">8</span>\n     <span class=\"token punctuation\">}</span>\n   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n   <span class=\"token punctuation\">{</span>\n     <span class=\"token property\">\"DeviceName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/dev/sdh\"</span><span class=\"token punctuation\">,</span>\n     <span class=\"token property\">\"Ebs\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token property\">\"VolumeSize\"</span><span class=\"token operator\">:</span> <span class=\"token number\">8</span>\n     <span class=\"token punctuation\">}</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<ul>\n<li>AMI 이미지 검색하기</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ aws ec2 describe-images <span class=\"token punctuation\">\\</span>\n--owners amazon <span class=\"token punctuation\">\\</span>\n--filters <span class=\"token string\">'Name=name,Values=amzn2-ami-hvm-2.0.????????.?-x86_64-gp2'</span> <span class=\"token string\">'Name=state,Values=available'</span> <span class=\"token punctuation\">\\</span>\n--query <span class=\"token string\">'reverse(sort_by(Images, &amp;CreationDate))[:1].ImageId'</span> <span class=\"token punctuation\">\\</span>\n--output text</code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/133739457-32b39321-3a59-40f2-817d-341ff163ec4b.JPG\" alt=\"11  ami 이미지 추출\"></p>\n<ul>\n<li>\n<p>EC2 생성하기</p>\n<ul>\n<li>해당 <code class=\"language-text\">--image-id</code> 옵션의 값은 <u><strong>자주 바뀌니 주의</strong></u></li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ aws ec2 run-instances --image-id ami-08c64544f5cfcddd0 <span class=\"token punctuation\">\\</span>\n--count <span class=\"token number\">1</span> --instance-type t2.micro --key-name MyKeyPair <span class=\"token punctuation\">\\</span>\n--security-group-ids <span class=\"token variable\">$MY_SG</span> <span class=\"token punctuation\">\\</span>\n--subnet-id <span class=\"token variable\">$MY_SID1</span> <span class=\"token punctuation\">\\</span>\n--block-device-mappings file://mapping.json</code></pre></div>\n<ul>\n<li>\n<p>EC2 상세 정보 조회</p>\n<ul>\n<li>새롭게 만들어진 EC2 서버의 상세 정보에서 퍼블릭 IP 확인하기</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token assign-left variable\">MY_IID</span><span class=\"token operator\">=</span>i-0c463c0c5951523b1\n$ aws ec2 describe-instances --instance-id <span class=\"token variable\">$MY_IID</span></code></pre></div>\n<ul>\n<li>SSH 프로토콜을 통하여 새롭게 만들어진 EC2 접속</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">ssh</span> -i <span class=\"token string\">\"MyKeyPair.pem\"</span> ec2-user@3.36.99.213</code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/133739460-8b6d3c9c-2f88-4ddf-b1d7-34930416be7b.JPG\" alt=\"12  ssh 서버 접속\"></p>\n<ul>\n<li>EC2에 웹 서버 설치 및 구동</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> -y httpd\n$ <span class=\"token function\">sudo</span> systemctl <span class=\"token builtin class-name\">enable</span> --now httpd\n$ <span class=\"token function\">curl</span> <span class=\"token number\">3.36</span>.99.213\n$ <span class=\"token builtin class-name\">exit</span></code></pre></div>\n<h2 id=\"lab-5---자원-정리하기\" style=\"position:relative;\"><a href=\"#lab-5---%EC%9E%90%EC%9B%90-%EC%A0%95%EB%A6%AC%ED%95%98%EA%B8%B0\" aria-label=\"lab 5   자원 정리하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>LAB 5 - 자원 정리하기</h2>\n<h4 id=\"현재까지-만든-자원을-cli-을-이용하여-지워봅시다\" style=\"position:relative;\"><a href=\"#%ED%98%84%EC%9E%AC%EA%B9%8C%EC%A7%80-%EB%A7%8C%EB%93%A0-%EC%9E%90%EC%9B%90%EC%9D%84-cli-%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%EC%A7%80%EC%9B%8C%EB%B4%85%EC%8B%9C%EB%8B%A4\" aria-label=\"현재까지 만든 자원을 cli 을 이용하여 지워봅시다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>현재까지 만든 자원을 CLI 을 이용하여 지워봅시다.</h4>\n<ul>\n<li>EC2 자원 삭제하기 및 상세 조회</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ aws ec2 terminate-instances --instance-id <span class=\"token variable\">$MY_IID</span>\n$ aws ec2 describe-instances --instance-ids <span class=\"token variable\">$MY_IID</span></code></pre></div>\n<ul>\n<li>서브넷 삭제하기</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ aws ec2 delete-subnet --subnet-id <span class=\"token variable\">$MY_SID1</span>\n$ aws ec2 delete-subnet --subnet-id <span class=\"token variable\">$MY_SID2</span></code></pre></div>\n<ul>\n<li>라우팅 테이블 삭제</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ aws ec2 delete-route-table --route-table-id <span class=\"token variable\">$MY_RTB</span></code></pre></div>\n<ul>\n<li>VPC와 인터넷 게이트웨이 detach</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ aws ec2 detach-internet-gateway --internet-gateway-id <span class=\"token variable\">$MY_IGW</span> --vpc-id <span class=\"token variable\">$MY_VPC</span></code></pre></div>\n<ul>\n<li>인터넷 게이트웨이 삭제</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ aws ec2 delete-internet-gateway --internet-gateway-id <span class=\"token variable\">$MY_IGW</span></code></pre></div>\n<ul>\n<li>VPC 삭제하기</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ aws ec2 delete-vpc --vpc-id <span class=\"token variable\">$MY_VPC</span></code></pre></div>\n<h2 id=\"lab-6---ansible을-활용한-ec2-인스턴스와-aws-도커-관리\" style=\"position:relative;\"><a href=\"#lab-6---ansible%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%9C-ec2-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4%EC%99%80-aws-%EB%8F%84%EC%BB%A4-%EA%B4%80%EB%A6%AC\" aria-label=\"lab 6   ansible을 활용한 ec2 인스턴스와 aws 도커 관리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>LAB 6 - Ansible을 활용한 EC2 인스턴스와 AWS 도커 관리</h2>\n<div class=\"quote-block\">\n<div class=\"quote-block__emoji\">💡</div>\n<div class=\"quote-block__content\" markdown=1>\n<p>제목쓰기</p>\n<p><strong><u>EC2의 클라우드 환경에서는 인벤토리를 관리할 필요가 없습니다.</u></strong><br>\n온프레미스처럼 기존에 가지고 있는 서버가 없기 때문입니다.<br>\n따라서 <strong>hosts는 localhost</strong>로 작업을 진행하면 됩니다.</p>\n</div>\n</div>\n<ul>\n<li>\n<p>앤서블 설치</p>\n<ul>\n<li>epel-release 레포를 사용해도 무방합니다.</li>\n<li><u>알아서 다른 레포를 추천해줌</u></li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> amazon-linux-extras <span class=\"token function\">install</span> ansible2</code></pre></div>\n<ul>\n<li>AWS 이미지 검색</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ aws ec2 describe-images <span class=\"token punctuation\">\\</span>\n--owners amazon <span class=\"token punctuation\">\\</span>\n--filters <span class=\"token string\">'Name=name,Values=amzn2-ami-hvm-2.0.????????.?-x86_64-gp2'</span> <span class=\"token string\">'Name=state,Values=available'</span> <span class=\"token punctuation\">\\</span>\n--query <span class=\"token string\">'reverse(sort_by(Images, &amp;CreationDate))[:1].ImageId'</span> <span class=\"token punctuation\">\\</span>\n--output text</code></pre></div>\n<ul>\n<li>\n<p>플레이북에 활용한 yaml 파일 만들기</p>\n<ul>\n<li><code class=\"language-text\">hosts: localhost</code> 옵션은 EC2 서버가 앤서블의 코어로 동작하는 것을 의미합니다.</li>\n<li><code class=\"language-text\">wait</code> 옵션 : <u>수행 결과를 기다리는 것임</u></li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\">$ vi ec2.yml\n\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> launch webservers instance\n  <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> localhost\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> start the instance\n    <span class=\"token key atrule\">ec2</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">region</span><span class=\"token punctuation\">:</span> ap<span class=\"token punctuation\">-</span>northeast<span class=\"token punctuation\">-</span><span class=\"token number\">2</span>\n      <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> ami<span class=\"token punctuation\">-</span>08c64544f5cfcddd0\n      <span class=\"token key atrule\">instance_type</span><span class=\"token punctuation\">:</span> t2.micro\n      <span class=\"token key atrule\">exact_count</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n      <span class=\"token key atrule\">count_tag</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> web <span class=\"token punctuation\">}</span>\n      <span class=\"token key atrule\">vpc_subnet_id</span><span class=\"token punctuation\">:</span> subnet<span class=\"token punctuation\">-</span>3ec34455\n      <span class=\"token key atrule\">assign_public_ip</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">True</span>\n      <span class=\"token key atrule\">user_data</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"{{ lookup('file', 'user_data.sh') }}\"</span>\n      <span class=\"token key atrule\">instance_tags</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token key atrule\">Name</span><span class=\"token punctuation\">:</span> WEB <span class=\"token punctuation\">}</span>\n      <span class=\"token key atrule\">group</span><span class=\"token punctuation\">:</span> SG<span class=\"token punctuation\">-</span>WEB\n      <span class=\"token key atrule\">key_name</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0916</span>\n      <span class=\"token key atrule\">wait</span><span class=\"token punctuation\">:</span> yes</code></pre></div>\n<ul>\n<li>유저 데이터 만들기</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">vi</span> user_data.sh\n\n<span class=\"token comment\">#!/bin/bash</span>\nyum <span class=\"token function\">install</span> -y httpd\nsystemctl start httpd <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">sudo</span> systemctl <span class=\"token builtin class-name\">enable</span> httpd\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"WEB\"</span> <span class=\"token operator\">></span> /var/www/html/index.html</code></pre></div>\n<ul>\n<li>플레이북 실행</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ ansible-playbook ec2.ym</code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/133746396-7e53732e-fd9c-4480-a0c3-c4da3da0074d.JPG\" alt=\"1  앤서블 서버 생성\">\nfdsaf</p>","frontmatter":{"title":"KOSTA_Ansible을 이용한 AWS 클라우드 DevOps 자동화 구현-4","date":"September 17, 2021","category":"⛓️ devops"}}},"pageContext":{"slug":"/devops/KOSTA_Ansible을 이용한 AWS 클라우드 DevOps 자동화 구현-4/","previous":{"fields":{"slug":"/devops/KOSTA_Ansible을 이용한 AWS 클라우드 DevOps 자동화 구현-3/"},"frontmatter":{"title":"KOSTA_Ansible을 이용한 AWS 클라우드 DevOps 자동화 구현-3","category":"⛓️ devops","draft":false}},"next":{"fields":{"slug":"/error/[git] - git pull 에러날 때/"},"frontmatter":{"title":"git pull 에러날때","category":"🤔 error","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}