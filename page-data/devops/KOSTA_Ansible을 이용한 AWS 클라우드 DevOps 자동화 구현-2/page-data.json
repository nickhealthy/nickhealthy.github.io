{"componentChunkName":"component---src-templates-blog-post-js","path":"/devops/KOSTA_Ansible을 이용한 AWS 클라우드 DevOps 자동화 구현-2/","result":{"data":{"site":{"siteMetadata":{"title":"Woo's Dev Log","author":"nickhealthy","siteUrl":"https://nickhealthy.github.io","comment":{"disqusShortName":"","utterances":"nickhealthy/nickhealthy.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"152c3eb6-29dd-5e1e-8031-457319026649","excerpt":"멀티플레이북을 실행하기 gather_facts를 사용해 변수를 사용하고 ansible-playbook를 최적화 작업 시키기 LAB 1 - playbook의 when 조건과 변수 사용하기 알고가기! 해야할 task를 정의하는 과 조건문인 를 이용해 동적으로 플레이북을 작성할 수 있습니다. 인벤토리 정보를 담고 있는 fact.txt 파일을 이용해 동적으로 playbook 작성하기 애드혹 방식으로  모듈을 이용해 인벤토리 서버에 대한 정보 가져오기 플레이북에 사용할 yaml…","html":"<ul>\n<li>멀티플레이북을 실행하기</li>\n<li>gather_facts를 사용해 변수를 사용하고 ansible-playbook를 최적화 작업 시키기</li>\n</ul>\n<h2 id=\"lab-1---playbook의-when-조건과-변수-사용하기\" style=\"position:relative;\"><a href=\"#lab-1---playbook%EC%9D%98-when-%EC%A1%B0%EA%B1%B4%EA%B3%BC-%EB%B3%80%EC%88%98-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"lab 1   playbook의 when 조건과 변수 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>LAB 1 - playbook의 when 조건과 변수 사용하기</h2>\n<div class=\"quote-block\">\n<div class=\"quote-block__emoji\">💡</div>\n<div class=\"quote-block__content\" markdown=1>\n<p>알고가기!</p>\n<p>해야할 task를 정의하는 <code class=\"language-text\">action</code>과 조건문인 <code class=\"language-text\">when</code>를 이용해 동적으로 플레이북을 작성할 수 있습니다.</p>\n</div>\n</div>\n<h4 id=\"인벤토리-정보를-담고-있는-facttxt-파일을-이용해-동적으로-playbook-작성하기\" style=\"position:relative;\"><a href=\"#%EC%9D%B8%EB%B2%A4%ED%86%A0%EB%A6%AC-%EC%A0%95%EB%B3%B4%EB%A5%BC-%EB%8B%B4%EA%B3%A0-%EC%9E%88%EB%8A%94-facttxt-%ED%8C%8C%EC%9D%BC%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%B4-%EB%8F%99%EC%A0%81%EC%9C%BC%EB%A1%9C-playbook-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"인벤토리 정보를 담고 있는 facttxt 파일을 이용해 동적으로 playbook 작성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>인벤토리 정보를 담고 있는 <em>fact.txt</em> 파일을 이용해 동적으로 playbook 작성하기</h4>\n<ul>\n<li>애드혹 방식으로 <code class=\"language-text\">setup</code> 모듈을 이용해 인벤토리 서버에 대한 정보 가져오기</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ ansible all -m setup <span class=\"token operator\">>></span> facts.txt</code></pre></div>\n<ul>\n<li>\n<p>플레이북에 사용할 yaml 파일 작성</p>\n<ul>\n<li>중괄호에 들어가 있는 것이 <em>facts.txt</em> 파일에서 활용하는 변수를 의미함</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">vi</span> test.yml\n\n<span class=\"token comment\"># [test.yml]</span>\n---\n- name: Install nginx on the nodes\n  hosts: all\n  become: <span class=\"token function\">yes</span>\n\n  tasks:\n    - name: <span class=\"token function\">install</span> epel-release <span class=\"token keyword\">for</span> CentOS\n      action: <span class=\"token string\">\"{{ ansible_pkg_mgr }} name=epel-release state=latest\"</span>\n      when: ansible_distribution <span class=\"token operator\">==</span> <span class=\"token string\">'CentOS'</span>\n\n    - name: <span class=\"token function\">install</span> nginx web server <span class=\"token keyword\">for</span> CentOS\n      action: <span class=\"token string\">\"{{ ansible_pkg_mgr }} name=nginx state=present\"</span>\n      when: ansible_distribution <span class=\"token operator\">==</span> <span class=\"token string\">'CentOS'</span>\n\n    - name: upload default index.html <span class=\"token keyword\">for</span> web server\n      get_url: <span class=\"token assign-left variable\">url</span><span class=\"token operator\">=</span>https://www.nginx.com <span class=\"token assign-left variable\">dest</span><span class=\"token operator\">=</span>/usr/share/nginx/html/ <span class=\"token assign-left variable\">mode</span><span class=\"token operator\">=</span>0644\n      when: ansible_distribution <span class=\"token operator\">==</span> <span class=\"token string\">'CentOS'</span>\n\n    - name: start nginx web server\n      service: <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span>nginx <span class=\"token assign-left variable\">state</span><span class=\"token operator\">=</span>started\n      when: ansible_distribution <span class=\"token operator\">==</span> <span class=\"token string\">'CentOS'</span>\n\n    - name: <span class=\"token function\">install</span> nginx web server <span class=\"token keyword\">for</span> Ubuntu\n      action: <span class=\"token string\">\"{{ ansible_pkg_mgr }} name=nginx state=present update_cache=yes\"</span>\n      when: ansible_distribution <span class=\"token operator\">==</span> <span class=\"token string\">'Ubuntu'</span>\n\n    - name: upload default index.html <span class=\"token keyword\">for</span> web server\n      get_url: <span class=\"token assign-left variable\">url</span><span class=\"token operator\">=</span>https://www.nginx.com <span class=\"token assign-left variable\">dest</span><span class=\"token operator\">=</span>/usr/share/nginx/html/\n               <span class=\"token assign-left variable\">mode</span><span class=\"token operator\">=</span>0644 <span class=\"token assign-left variable\">validate_certs</span><span class=\"token operator\">=</span>no\n      when: ansible_distribution <span class=\"token operator\">==</span> <span class=\"token string\">'Ubuntu'</span></code></pre></div>\n<ul>\n<li>작성한 플레이북 구동</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ ansible-playbook test.yml</code></pre></div>\n<ul>\n<li>\n<p>검증</p>\n<ul>\n<li><code class=\"language-text\">gather_facts</code> 의 기본 값은 yes이며, 위에서 정보를 표시해줍니다. 빠른 성능과 정보가 필요 없다면 no로 설정하는 것이 좋습니다.</li>\n<li><code class=\"language-text\">when</code> 조건에 맞지 않는 것은 skipping 된 것을 확인할 수 있습니다. 아래 예제에선 centos 조건문을 걸었는데 스킵 된 인벤토리 서버는 ubuntu임</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/133713417-63f482b3-8d8d-47b5-a185-920765b50a9b.JPG\" alt=\"1  플레이북 변수정보 활용하기\"></p>\n<ul>\n<li>플레이북을 이용해 삭제하기</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">vi</span> test_remove.yml\n<span class=\"token comment\"># [test_remove.yml]</span>\n\n---\n- name: Remove nginx on the nodes\n  hosts: all\n  become: <span class=\"token function\">yes</span>\n\n  tasks:\n    - name: remove epel-release <span class=\"token keyword\">for</span> CentOS\n      action: <span class=\"token string\">\"{{ ansible_pkg_mgr }} name=epel-release state=absent\"</span>\n      when: ansible_distribution <span class=\"token operator\">==</span> <span class=\"token string\">'CentOS'</span>\n\n    - name: remove nginx web server <span class=\"token keyword\">for</span> CentOS\n      action: <span class=\"token string\">\"{{ ansible_pkg_mgr }} name=nginx state=absent\"</span>\n      when: ansible_distribution <span class=\"token operator\">==</span> <span class=\"token string\">'CentOS'</span>\n\n    - name: remove nginx web server\n      action: <span class=\"token string\">\"{{ ansible_pkg_mgr }} name=nginx state=absent autoremove=yes\"</span>\n      when: ansible_distribution <span class=\"token operator\">==</span> <span class=\"token string\">'Ubuntu'</span>\n<span class=\"token punctuation\">..</span>.</code></pre></div>\n<ul>\n<li>작성된 플레이북 실행</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ ansible-playbook test_remove.yml</code></pre></div>\n<h2 id=\"lab-2---playbook을-이용해-nfs-구축-및-multi-play-구현\" style=\"position:relative;\"><a href=\"#lab-2---playbook%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%B4-nfs-%EA%B5%AC%EC%B6%95-%EB%B0%8F-multi-play-%EA%B5%AC%ED%98%84\" aria-label=\"lab 2   playbook을 이용해 nfs 구축 및 multi play 구현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>LAB 2 - playbook을 이용해 nfs 구축 및 multi-play 구현</h2>\n<h4 id=\"nfs를-localhost에-만들고-인벤토리-서버들을-해당-nfs에-마운트하기\" style=\"position:relative;\"><a href=\"#nfs%EB%A5%BC-localhost%EC%97%90-%EB%A7%8C%EB%93%A4%EA%B3%A0-%EC%9D%B8%EB%B2%A4%ED%86%A0%EB%A6%AC-%EC%84%9C%EB%B2%84%EB%93%A4%EC%9D%84-%ED%95%B4%EB%8B%B9-nfs%EC%97%90-%EB%A7%88%EC%9A%B4%ED%8A%B8%ED%95%98%EA%B8%B0\" aria-label=\"nfs를 localhost에 만들고 인벤토리 서버들을 해당 nfs에 마운트하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>nfs를 localhost에 만들고, 인벤토리 서버들을 해당 nfs에 마운트하기</h4>\n<ul>\n<li>\n<p>플레이북에 사용할 yaml 파일 작성</p>\n<ul>\n<li><code class=\"language-text\">mode: 0777</code> 옵션 : chmod 777과 동일</li>\n<li><code class=\"language-text\">/etc/exports</code> 옵션 : 접속이 허용된 대역을 추가하기 위한 설정</li>\n<li><em>설치할 유틸리티나 버전 등의 작성 등, 우분투와 센트OS는 조금씩 다릅니다.</em></li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">vi</span> nfs.yml\n\n<span class=\"token comment\"># [nfs.yml]</span>\n- name: Setup <span class=\"token keyword\">for</span> nfs server\n  hosts: localhost <span class=\"token comment\"># ansible 서버인 localhost에 설치</span>\n  gather_facts: no\n\n  tasks:\n    - name: <span class=\"token function\">make</span> nfs_shared directory\n      file:  <span class=\"token comment\"># file 모듈</span>\n        path: /root/nfs_shared\n        state: directory\n        mode: 0777 <span class=\"token comment\"># chmod 777과 동일</span>\n    - name: configure /etc/exports <span class=\"token comment\"># 접속이 허용된 대역을 추가하기 위한 설정</span>\n      lineinfile:\n        path: /etc/exports\n        line: /root/nfs_shared <span class=\"token number\">192.168</span>.56.0/24<span class=\"token punctuation\">(</span>rw,sync<span class=\"token punctuation\">)</span>\n    - name: <span class=\"token function\">install</span> NFS\n      yum:\n        name: nfs-utils <span class=\"token comment\"># nfs 서버 설치</span>\n        state: present\n    - name: nfs <span class=\"token function\">service</span> start\n      service:\n        name: nfs-server\n        state: restarted\n        enabled: <span class=\"token function\">yes</span>\n\n- name: Setup <span class=\"token keyword\">for</span> nfs clients\n  hosts: centos\n  gather_facts: no\n\n  tasks:\n    - name: <span class=\"token function\">make</span> nfs_client directory\n      file:\n        path: /root/nfs\n        state: directory\n    - name: <span class=\"token function\">install</span> NFS\n      yum:\n        name: nfs-utils\n        state: present\n    - name: <span class=\"token function\">mount</span> point directory as client\n      mount:\n        path: /root/nfs\n        src: <span class=\"token number\">192.168</span>.56.105:/root/nfs_shared <span class=\"token comment\"># ansible의 ip를 할당</span>\n        fstype: nfs\n        state: mounted\n\n- name: Setup <span class=\"token keyword\">for</span> nfs clients Ubuntu\n  hosts: ubuntu\n  gather_facts: no\n\n  tasks:\n    - name: <span class=\"token function\">make</span> nfs_client directory\n      file:\n        path: /root/nfs\n        state: directory\n\n    - name: Install NFS-Utils\n      apt:\n        pkg: nfs-common\n        state: present\n        update_cache: <span class=\"token function\">yes</span> <span class=\"token comment\"># apt update -y</span>\n\n    - name: <span class=\"token function\">mount</span> point directory as client\n      mount:\n        path: /root/nfs\n        src: <span class=\"token number\">192.168</span>.56.105:/root/nfs_shared\n        fstype: nfs\n        opts: <span class=\"token assign-left variable\">nfsvers</span><span class=\"token operator\">=</span><span class=\"token number\">3</span>\n        state: mounted</code></pre></div>\n<ul>\n<li>작성된 플레이북 실행하기</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ ansible-playbook nfs.yml</code></pre></div>\n<ul>\n<li>확인하기</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/133713419-720df8bf-f5aa-4666-a425-22f731a58d8c.JPG\" alt=\"2  nfs 마운트정보\"></p>","frontmatter":{"title":"KOSTA_Ansible을 이용한 AWS 클라우드 DevOps 자동화 구현-2","date":"September 16, 2021","category":"⛓️ devops"}}},"pageContext":{"slug":"/devops/KOSTA_Ansible을 이용한 AWS 클라우드 DevOps 자동화 구현-2/","previous":{"fields":{"slug":"/devops/KOSTA_Ansible을 이용한 AWS 클라우드 DevOps 자동화 구현-1/"},"frontmatter":{"title":"KOSTA_Ansible을 이용한 AWS 클라우드 DevOps 자동화 구현-1","category":"⛓️ devops","draft":false}},"next":{"fields":{"slug":"/devops/KOSTA_Ansible을 이용한 AWS 클라우드 DevOps 자동화 구현-3/"},"frontmatter":{"title":"KOSTA_Ansible을 이용한 AWS 클라우드 DevOps 자동화 구현-3","category":"⛓️ devops","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}