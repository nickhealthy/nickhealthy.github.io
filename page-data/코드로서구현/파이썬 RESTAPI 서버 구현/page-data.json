{"componentChunkName":"component---src-templates-blog-post-js","path":"/코드로서구현/파이썬 RESTAPI 서버 구현/","result":{"data":{"site":{"siteMetadata":{"title":"Woo's Dev Log","author":"nickhealthy","siteUrl":"https://nickhealthy.github.io","comment":{"disqusShortName":"","utterances":"nickhealthy/nickhealthy.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"22e71ff6-e1ee-5543-a98b-286aa2c9dd03","excerpt":"실습 목표 django rest framework를 이용해 API 서버를 간단하게 구축해보기 기본 환경 구성 파이썬 가상 개발환경 구축 및 설정 필요한 라이브러리 설치 장고 장고 REST 프레임워크 새로운 장고 프로젝트 생성 Django API 프로젝트 생성 마이그레이트 필요한 테이블 생성 & 관리자 유저 생성 djangorestframework를 사용하기 위한 구성  전체 수정  수정 장고 API 서버 실행 정상적으로 실행된 모습 image-2021062922553411…","html":"<h3 id=\"실습-목표\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%8A%B5-%EB%AA%A9%ED%91%9C\" aria-label=\"실습 목표 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실습 목표</h3>\n<p>django rest framework를 이용해 API 서버를 간단하게 구축해보기</p>\n<h2 id=\"기본-환경-구성\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%B3%B8-%ED%99%98%EA%B2%BD-%EA%B5%AC%EC%84%B1\" aria-label=\"기본 환경 구성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기본 환경 구성</h2>\n<ul>\n<li>파이썬 가상 개발환경 구축 및 설정</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ python -m venv venv\n$ <span class=\"token builtin class-name\">.</span> venv/Script/activate</code></pre></div>\n<ul>\n<li>\n<p>필요한 라이브러리 설치</p>\n<ul>\n<li>장고</li>\n<li>장고 REST 프레임워크</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ pip <span class=\"token function\">install</span> django\n$ pip <span class=\"token function\">install</span> djangorestframework</code></pre></div>\n<ul>\n<li>\n<p>새로운 장고 프로젝트 생성</p>\n<ul>\n<li>Django API 프로젝트 생성</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ django-admin startproject example <span class=\"token builtin class-name\">.</span></code></pre></div>\n<ul>\n<li>마이그레이트 필요한 테이블 생성 &#x26; 관리자 유저 생성</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ ./manage.py migrate\n$ ./manage.py createsuperuser <span class=\"token comment\"># 관리자 유저 생성</span></code></pre></div>\n<h2 id=\"djangorestframework를-사용하기-위한-구성\" style=\"position:relative;\"><a href=\"#djangorestframework%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0-%EC%9C%84%ED%95%9C-%EA%B5%AC%EC%84%B1\" aria-label=\"djangorestframework를 사용하기 위한 구성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>djangorestframework를 사용하기 위한 구성</h2>\n<ul>\n<li><code class=\"language-text\">urls.py</code> 전체 수정</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">from django.urls <span class=\"token function\">import</span> path, include\nfrom django.contrib.auth.models <span class=\"token function\">import</span> User\nfrom rest_framework <span class=\"token function\">import</span> serializers, viewsets, routers\n\n<span class=\"token comment\"># Serializers define the API representation.</span>\nclass UserSerializer<span class=\"token punctuation\">(</span>serializers.HyperlinkedModelSerializer<span class=\"token punctuation\">)</span>:\n    class Meta:\n        model <span class=\"token operator\">=</span> User\n        fields <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'url'</span>, <span class=\"token string\">'username'</span>, <span class=\"token string\">'email'</span>, <span class=\"token string\">'is_staff'</span><span class=\"token punctuation\">]</span>\n\n\n<span class=\"token comment\"># ViewSets define the view behavior.</span>\nclass UserViewSet<span class=\"token punctuation\">(</span>viewsets.ModelViewSet<span class=\"token punctuation\">)</span>:\n    queryset <span class=\"token operator\">=</span> User.objects.all<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    serializer_class <span class=\"token operator\">=</span> UserSerializer\n\n\n<span class=\"token comment\"># Routers provide a way of automatically determining the URL conf.</span>\nrouter <span class=\"token operator\">=</span> routers.DefaultRouter<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nrouter.register<span class=\"token punctuation\">(</span>r<span class=\"token string\">'users'</span>, UserViewSet<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\"># Wire up our API using automatic URL routing.</span>\n<span class=\"token comment\"># Additionally, we include login URLs for the browsable API.</span>\nurlpatterns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    path<span class=\"token punctuation\">(</span><span class=\"token string\">''</span>, include<span class=\"token punctuation\">(</span>router.urls<span class=\"token punctuation\">))</span>,\n    path<span class=\"token punctuation\">(</span><span class=\"token string\">'api-auth/'</span>, include<span class=\"token punctuation\">(</span><span class=\"token string\">'rest_framework.urls'</span>, <span class=\"token assign-left variable\">namespace</span><span class=\"token operator\">=</span><span class=\"token string\">'rest_framework'</span><span class=\"token punctuation\">))</span>,\n<span class=\"token punctuation\">]</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">settings.py</code> 수정</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">INSTALLED_APPS <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">..</span>.  <span class=\"token comment\"># Make sure to include the default installed apps here.</span>\n    <span class=\"token string\">'rest_framework'</span>, <span class=\"token comment\"># &lt;&lt; 해당 코드 추가</span>\n<span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 하위 코드 모두 추가</span>\nREST_FRAMEWORK <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\"># Use Django's standard `django.contrib.auth` permissions,</span>\n    <span class=\"token comment\"># or allow read-only access for unauthenticated users.</span>\n    <span class=\"token string\">'DEFAULT_PERMISSION_CLASSES'</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'</span>,\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>장고 API 서버 실행</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ ./manage.py runserver</code></pre></div>\n<ul>\n<li>정상적으로 실행된 모습</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/123941411-18119900-d9d5-11eb-9ef7-64c163541afe.png\" alt=\"image-20210629225534118\"></p>\n<h2 id=\"테스트\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"테스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테스트</h2>\n<ul>\n<li>유저 조회해보기</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 해당 명령어에서 admin, password 부분을 수정해서 질의를 날려야 함</span>\n<span class=\"token comment\"># 저는 superuser로 `user1`/`user1` 으로 설정해 두었기에 밑에 사진에서 해당 명령어를 확인할 수 있습니다.</span>\n$ <span class=\"token function\">curl</span> -H <span class=\"token string\">'Accept: application/json; indent=4'</span> -u admin:password http://127.0.0.1:8000/users/</code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/66216102/123942482-24e2bc80-d9d6-11eb-9c52-ffa86fe07a92.png\" alt=\"image-20210630190517070\"></p>\n<h2 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h2>\n<p><a href=\"https://github.com/encode/django-rest-framework/\">https://github.com/encode/django-rest-framework/</a><br>\n<a href=\"https://www.youtube.com/watch?v=TTOL-jzc-7E\">https://www.youtube.com/watch?v=TTOL-jzc-7E</a></p>","frontmatter":{"title":"파이썬 RESTAPI 서버 구현","date":"June 30, 2021","category":"🎮 코드로서구현"}}},"pageContext":{"slug":"/코드로서구현/파이썬 RESTAPI 서버 구현/","previous":{"fields":{"slug":"/cloud/[AWS] Route53 구성 및 라우팅 정책/"},"frontmatter":{"title":"[AWS] Route53 구성 및 라우팅 정책","category":"☁️ cloud","draft":false}},"next":{"fields":{"slug":"/배워두면유용한것/삼성SDS Brity RPA Designer 사용법/"},"frontmatter":{"title":"삼성SDS Brity RPA Designer 사용법","category":"✔️ 배워두면유용한것","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}