{"componentChunkName":"component---src-templates-blog-post-js","path":"/solving-algo/[리트코드]_42.Trapping Rain Water/","result":{"data":{"site":{"siteMetadata":{"title":"Woo's Dev Log","author":"nickhealthy","siteUrl":"https://nickhealthy.github.io","comment":{"disqusShortName":"","utterances":"nickhealthy/nickhealthy.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"66204fa7-d836-54ac-a462-8ce36100ab75","excerpt":"문제 주소 높이를 입력받아 비 온 후 얼마나 많은 물이 쌓일 수 있는지 계산하는 문제\nhttps://leetcode.com/problems/trapping-rain-water/ 풀이방법 투 포인터를 이용해 풀었다. 가장 높이 있는 벽을 왼쪽과 오른쪽으로 나누는 기준점으로 삼고, 가장 높은 벽에 둘 다 도달하였을 때 종료된다. 또한,  변수에  일 경우 물이 차오를 수 있는 구조기 때문에 그 차이 값만큼 더해 주었다.","html":"<h1 id=\"문제-주소\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%A3%BC%EC%86%8C\" aria-label=\"문제 주소 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 주소</h1>\n<p>높이를 입력받아 비 온 후 얼마나 많은 물이 쌓일 수 있는지 계산하는 문제\n<a href=\"https://leetcode.com/problems/trapping-rain-water/\">https://leetcode.com/problems/trapping-rain-water/</a></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">trap</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">:</span> List<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> height<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token number\">0</span>\n\n        volume <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        left<span class=\"token punctuation\">,</span> right <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n        left_max<span class=\"token punctuation\">,</span> right_max <span class=\"token operator\">=</span> height<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span>\n\n        <span class=\"token keyword\">while</span> left <span class=\"token operator\">&lt;</span> right<span class=\"token punctuation\">:</span>\n            left_max<span class=\"token punctuation\">,</span> right_max <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> left_max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> \\\n                                    <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> right_max<span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword\">if</span> left_max <span class=\"token operator\">&lt;=</span> right_max<span class=\"token punctuation\">:</span>\n                volume <span class=\"token operator\">+=</span> left_max <span class=\"token operator\">-</span> height<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span>\n                left <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                volume <span class=\"token operator\">+=</span> right_max <span class=\"token operator\">-</span> height<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span>\n                right <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">return</span> volume</code></pre></div>\n<h1 id=\"풀이방법\" style=\"position:relative;\"><a href=\"#%ED%92%80%EC%9D%B4%EB%B0%A9%EB%B2%95\" aria-label=\"풀이방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>풀이방법</h1>\n<p>투 포인터를 이용해 풀었다. 가장 높이 있는 벽을 왼쪽과 오른쪽으로 나누는 기준점으로 삼고, 가장 높은 벽에 둘 다 도달하였을 때 종료된다.<br>\n또한, <code class=\"language-text\">volume</code> 변수에 <code class=\"language-text\">현재 가장 높은 벽 - 다음 낮은 벽</code> 일 경우 물이 차오를 수 있는 구조기 때문에 그 차이 값만큼 더해 주었다.</p>","frontmatter":{"title":"[리트코드]_42.Trapping_Rain_Water","date":"February 17, 2021","category":"🔥 solving-algo"}}},"pageContext":{"slug":"/solving-algo/[리트코드]_42.Trapping Rain Water/","previous":{"fields":{"slug":"/solving-algo/[programmers]_등굣길/"},"frontmatter":{"title":"[programmers]등굣길","category":"💯 solving-algo","draft":false}},"next":{"fields":{"slug":"/solving-algo/[리트코드]_15.3Sum/"},"frontmatter":{"title":"[리트코드]_15.3Sum","category":"🔥 solving-algo","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}