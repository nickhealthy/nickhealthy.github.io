{"componentChunkName":"component---src-templates-blog-post-js","path":"/solving-algo/[리트코드]_5.Longest Palindromic Substring/","result":{"data":{"site":{"siteMetadata":{"title":"Woo's Dev Log","author":"nickhealthy","siteUrl":"https://nickhealthy.github.io","comment":{"disqusShortName":"","utterances":"nickhealthy/nickhealthy.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"88b81d6d-b017-5608-9eaf-a485067b22e2","excerpt":"문제 주소 가장 긴 팰린드롬을 찾는 문제이며, 여러 개의 입력 중 가장 긴 길이를 찾는 것은 다이나믹 프로그래밍이 일반적이지만 투포인터를 활용\nhttps://leetcode.com/problems/longest-palindromic-substring/ My Solution 풀이 방법 투 포인터와 슬라이딩 윈도우를 활용했다. expand 함수를 통해 팰린드 롬 조건에 부합하는 중간 값을 찾으면 , 로 범위를 확장하여 가장 긴 값을 출력하는 형식이다. 또한 max…","html":"<h1 id=\"문제-주소\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%A3%BC%EC%86%8C\" aria-label=\"문제 주소 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 주소</h1>\n<p>가장 긴 팰린드롬을 찾는 문제이며, 여러 개의 입력 중 가장 긴 길이를 찾는 것은 다이나믹 프로그래밍이 일반적이지만 투포인터를 활용\n<a href=\"https://leetcode.com/problems/longest-palindromic-substring/\">https://leetcode.com/problems/longest-palindromic-substring/</a></p>\n<h1 id=\"my-solution\" style=\"position:relative;\"><a href=\"#my-solution\" aria-label=\"my solution permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>My Solution</h1>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">longestPalindrome</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 판별 대상이 아닌 것은 빠르게 return</span>\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span> <span class=\"token keyword\">or</span> s <span class=\"token operator\">==</span> s<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> s\n\n        <span class=\"token comment\"># 투 포인터를 이용해 확장</span>\n        <span class=\"token keyword\">def</span> <span class=\"token function\">expand</span><span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">while</span> left <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> right <span class=\"token operator\">&lt;=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> s<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> s<span class=\"token punctuation\">[</span>right <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                left <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n                right <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword\">return</span> s<span class=\"token punctuation\">[</span>left <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">:</span> right <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n\n        <span class=\"token comment\"># 홀수와 짝수로 팰린드롬을 모두 판별</span>\n        result <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            result <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">,</span>\n                            expand<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                            expand<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                            key<span class=\"token operator\">=</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> result</code></pre></div>\n<h1 id=\"풀이-방법\" style=\"position:relative;\"><a href=\"#%ED%92%80%EC%9D%B4-%EB%B0%A9%EB%B2%95\" aria-label=\"풀이 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>풀이 방법</h1>\n<p>투 포인터와 슬라이딩 윈도우를 활용했다. expand 함수를 통해 팰린드 롬 조건에 부합하는 <strong>중간 값</strong>을 찾으면 <code class=\"language-text\">left</code>, <code class=\"language-text\">right</code>로 범위를 확장하여 가장 긴 값을 출력하는 형식이다.<br>\n또한 max 함수는 팰린드 롬의 특성상 <strong>홀수/짝수</strong>를 모두 판별해 봐야 하기 때문에 그 중에서 가장 긴 값을 키 값으로 <code class=\"language-text\">len</code> 함수를 이용하였다.</p>","frontmatter":{"title":"[리트코드] 5.Longest Palindromic Substring","date":"February 12, 2021","category":"💯 solving-algo"}}},"pageContext":{"slug":"/solving-algo/[리트코드]_5.Longest Palindromic Substring/","previous":{"fields":{"slug":"/algorithm/[파이썬알고리즘인터뷰]6-1.문자열 조작(String-Manipulation)/"},"frontmatter":{"title":"[파이썬알고리즘인터뷰]#6-1 문자열 조작(String Manipulation)","category":"🔥 algorithm","draft":false}},"next":null}},"staticQueryHashes":["3128451518","521680639"]}